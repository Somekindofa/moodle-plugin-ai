<<<<<<< HEAD
{"version":3,"file":"chat_interface.min.js","names":["Ajax","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","_typeof","has","get","set","_t3","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_regenerator","Symbol","iterator","toStringTag","c","prototype","Generator","u","create","_regeneratorDefine2","p","y","G","v","a","d","bind","length","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","displayName","w","m","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","init","_exports","initializeChat","console","log","sendButton","document","getElementById","chatInput","messagesContainer","chatContainer","resizeHandle","providerSelect","claudeModelSelect","claudeModelSelection","error","aiConfig","currentProvider","selectedClaudeModel","loadAIConfiguration","savedWidth","localStorage","getItem","savedHeight","style","width","height","isResizing","startX","startY","startWidth","startHeight","addEventListener","classList","add","clientX","clientY","parseInt","window","getComputedStyle","preventDefault","newWidth","Math","max","min","newHeight","setItem","remove","methodname","args","config","success","setupProviderUI","message","claude_available","fireworks_available","claude_models","default_claude_model","showConfigurationError","fail","name","stack","errorDiv","createElement","className","innerHTML","concat","appendChild","hasAvailableProvider","fireworksOption","textContent","claudeOption","disabled","color","savedProvider","savedClaudeModel","querySelector","updateClaudeModelVisibility","_aiConfig","display","sendMessage","trim","userMessageDiv","loadingDiv","provider","credentials","removeChild","sendClaudeChatMessage","api_key","sendFireworksChatMessage","contains","scrollTop","scrollHeight","_x","_x2","_sendFireworksChatMessage","_callee2","apiKey","_context2","setTimeout","_callee","aiMessageDiv","responseSpan","url","options","response","data","content","htmlContent","_t","_context","method","headers","body","JSON","stringify","fetch","json","choices","marked","parse","_x3","_x4","_sendClaudeChatMessage","_callee4","_context4","_callee3","modelToUse","_t2","_context3","model","max_tokens","messages","role","text","key","shiftKey","readyState"],"sources":["../src/chat_interface.js"],"sourcesContent":["// Standard license block omitted for brevity\r\n/**\r\n * @module     block_aiassistant/chat_interface\r\n * @copyright  2025 Your Name\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Ajax from 'core/ajax';\r\n\r\n/**\r\n * Initialize the AI chat interface\r\n */\r\nexport const init = () => {\r\n    // Function to initialize the chat interface\r\n    const initializeChat = () => {\r\n        console.log('AI Chat: Initializing...');\r\n        \r\n        const sendButton = document.getElementById(\"ai-chat-send\");\r\n        const chatInput = document.getElementById(\"ai-chat-input\");\r\n        const messagesContainer = document.getElementById(\"ai-chat-messages\");\r\n        const chatContainer = document.getElementById(\"ai-chat-container\");\r\n        const resizeHandle = document.getElementById(\"ai-resize-handle\");\r\n        const providerSelect = document.getElementById(\"ai-provider-select\");\r\n        const claudeModelSelect = document.getElementById(\"claude-model-select\");\r\n        const claudeModelSelection = document.getElementById(\"claude-model-selection\");\r\n\r\n        console.log('AI Chat: Elements found:', {\r\n            sendButton: !!sendButton,\r\n            chatInput: !!chatInput,\r\n            messagesContainer: !!messagesContainer,\r\n            chatContainer: !!chatContainer,\r\n            resizeHandle: !!resizeHandle,\r\n            providerSelect: !!providerSelect,\r\n            claudeModelSelect: !!claudeModelSelect\r\n        });\r\n\r\n        if (!sendButton || !chatInput || !messagesContainer || !providerSelect) {\r\n            console.error('AI Chat: Required elements not found');\r\n            return;\r\n        }\r\n\r\n        // Global configuration storage\r\n        let aiConfig = null;\r\n        let currentProvider = 'fireworks';\r\n        let selectedClaudeModel = '';\r\n\r\n        // Load AI configuration on startup\r\n        loadAIConfiguration();\r\n\r\n        // Load saved dimensions from localStorage\r\n        const savedWidth = localStorage.getItem('ai-chat-width');\r\n        const savedHeight = localStorage.getItem('ai-chat-height');\r\n\r\n        if (savedWidth) {\r\n            chatContainer.style.width = savedWidth + 'px';\r\n        }\r\n        if (savedHeight) {\r\n            messagesContainer.style.height = savedHeight + 'px';\r\n        }\r\n\r\n        // Resize functionality\r\n        let isResizing = false;\r\n        let startX, startY, startWidth, startHeight;\r\n\r\n        if (resizeHandle) {\r\n            resizeHandle.addEventListener('mousedown', function(e) {\r\n                isResizing = true;\r\n                chatContainer.classList.add('resizing');\r\n                startX = e.clientX;\r\n                startY = e.clientY;\r\n                startWidth = parseInt(window.getComputedStyle(chatContainer).width, 10);\r\n                startHeight = parseInt(window.getComputedStyle(messagesContainer).height, 10);\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        document.addEventListener('mousemove', function(e) {\r\n            if (!isResizing) {\r\n                return;\r\n            }\r\n            const newWidth = Math.max(300, Math.min(800, startWidth + (e.clientX - startX)));\r\n            const newHeight = Math.max(150, Math.min(600, startHeight + (e.clientY - startY)));\r\n            chatContainer.style.width = newWidth + 'px';\r\n            messagesContainer.style.height = newHeight + 'px';\r\n            // Save to localStorage\r\n            localStorage.setItem('ai-chat-width', newWidth);\r\n            localStorage.setItem('ai-chat-height', newHeight);\r\n        });\r\n\r\n        document.addEventListener('mouseup', function() {\r\n            if (isResizing) {\r\n                isResizing = false;\r\n                chatContainer.classList.remove('resizing');\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Load AI configuration from backend\r\n         */\r\n        function loadAIConfiguration() {\r\n            console.log('DEBUG: Starting AJAX call to block_aiassistant_get_ai_config');\r\n            \r\n            Ajax.call([{\r\n                methodname: 'block_aiassistant_get_ai_config',\r\n                args: {},\r\n                done: function(config) {\r\n                    console.log('DEBUG: AJAX success, config received:', config);\r\n                    \r\n                    if (config && config.success) {\r\n                        aiConfig = config;\r\n                        console.log('AI Config loaded successfully:', aiConfig);\r\n                        setupProviderUI();\r\n                    } else {\r\n                        console.error('Failed to load AI configuration:', config ? config.message : 'No response received');\r\n                        console.error('Full config object:', config);\r\n                        aiConfig = {\r\n                            success: false,\r\n                            claude_available: false,\r\n                            fireworks_available: false,\r\n                            claude_models: [],\r\n                            default_claude_model: ''\r\n                        };\r\n                        showConfigurationError('Failed to load AI configuration. Please check plugin settings.');\r\n                    }\r\n                },\r\n                fail: function(error) {\r\n                    console.error('AJAX call failed:', error);\r\n                    console.error('Error details:', {\r\n                        name: error.name,\r\n                        message: error.message,\r\n                        stack: error.stack\r\n                    });\r\n                    aiConfig = {\r\n                        success: false,\r\n                        claude_available: false,\r\n                        fireworks_available: false,\r\n                        claude_models: [],\r\n                        default_claude_model: ''\r\n                    };\r\n                    showConfigurationError('Could not connect to AI configuration service.');\r\n                }\r\n            }]);\r\n        }\r\n\r\n        /**\r\n         * Show configuration error in chat\r\n         */\r\n        function showConfigurationError(message) {\r\n            const errorDiv = document.createElement(\"div\");\r\n            errorDiv.className = \"ai-message\";\r\n            errorDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Error: ${message}</em>`;\r\n            messagesContainer.appendChild(errorDiv);\r\n        }\r\n\r\n        /**\r\n         * Setup provider UI based on configuration\r\n         */\r\n        function setupProviderUI() {\r\n            console.log('DEBUG: setupProviderUI called with aiConfig:', aiConfig);\r\n            \r\n            // Ensure aiConfig exists before proceeding\r\n            if (!aiConfig) {\r\n                console.error('AI configuration not loaded, cannot setup provider UI');\r\n                return;\r\n            }\r\n\r\n            console.log('DEBUG: aiConfig properties:', {\r\n                success: aiConfig.success,\r\n                claude_available: aiConfig.claude_available,\r\n                fireworks_available: aiConfig.fireworks_available,\r\n                default_claude_model: aiConfig.default_claude_model,\r\n                claude_models: aiConfig.claude_models\r\n            });\r\n\r\n            // Clear existing options\r\n            providerSelect.innerHTML = '';\r\n            if (claudeModelSelect) {\r\n                claudeModelSelect.innerHTML = '';\r\n            }\r\n\r\n            let hasAvailableProvider = false;\r\n\r\n            // Add available providers\r\n            if (aiConfig && aiConfig.fireworks_available) {\r\n                const fireworksOption = document.createElement('option');\r\n                fireworksOption.value = 'fireworks';\r\n                fireworksOption.textContent = 'Fireworks.ai';\r\n                providerSelect.appendChild(fireworksOption);\r\n                hasAvailableProvider = true;\r\n            }\r\n\r\n            if (aiConfig && aiConfig.claude_available) {\r\n                const claudeOption = document.createElement('option');\r\n                claudeOption.value = 'claude';\r\n                claudeOption.textContent = 'Claude API (Under maintenance - coming soon)';\r\n                claudeOption.disabled = true; // Temporarily disable Claude\r\n                claudeOption.style.color = '#999'; // Grey out the option\r\n                providerSelect.appendChild(claudeOption);\r\n                // Don't set hasAvailableProvider = true for Claude temporarily\r\n\r\n                // Comment out Claude model population for now\r\n                /*\r\n                // Populate Claude models if element exists and models are available\r\n                if (claudeModelSelect && aiConfig.claude_models && Array.isArray(aiConfig.claude_models)) {\r\n                    aiConfig.claude_models.forEach(model => {\r\n                        const modelOption = document.createElement('option');\r\n                        modelOption.value = model.key;\r\n                        modelOption.textContent = model.name;\r\n                        claudeModelSelect.appendChild(modelOption);\r\n                    });\r\n\r\n                    // Set default Claude model\r\n                    if (aiConfig && aiConfig.default_claude_model) {\r\n                        claudeModelSelect.value = aiConfig.default_claude_model;\r\n                        selectedClaudeModel = aiConfig.default_claude_model;\r\n                    }\r\n                }\r\n                */\r\n            }\r\n\r\n            // If no providers are available, add disabled options\r\n            if (!hasAvailableProvider) {\r\n                if (!aiConfig || !aiConfig.fireworks_available) {\r\n                    const fireworksOption = document.createElement('option');\r\n                    fireworksOption.value = 'fireworks';\r\n                    fireworksOption.textContent = 'Fireworks.ai (Not configured)';\r\n                    fireworksOption.disabled = true;\r\n                    providerSelect.appendChild(fireworksOption);\r\n                }\r\n\r\n                if (!aiConfig || !aiConfig.claude_available) {\r\n                    const claudeOption = document.createElement('option');\r\n                    claudeOption.value = 'claude';\r\n                    claudeOption.textContent = 'Claude API (Not configured)';\r\n                    claudeOption.disabled = true;\r\n                    providerSelect.appendChild(claudeOption);\r\n                }\r\n                \r\n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\r\n                return;\r\n            }\r\n\r\n            // Restore saved selections\r\n            const savedProvider = localStorage.getItem('ai-chat-provider');\r\n            const savedClaudeModel = localStorage.getItem('ai-chat-claude-model');\r\n\r\n            if (savedProvider && document.querySelector(`option[value=\"${savedProvider}\"]`)) {\r\n                providerSelect.value = savedProvider;\r\n                currentProvider = savedProvider;\r\n            } else if (aiConfig && aiConfig.fireworks_available) {\r\n                currentProvider = 'fireworks';\r\n                providerSelect.value = 'fireworks';\r\n            } else if (aiConfig && aiConfig.claude_available) {\r\n                currentProvider = 'claude';\r\n                providerSelect.value = 'claude';\r\n            }\r\n\r\n            if (savedClaudeModel && claudeModelSelect && document.querySelector(`#claude-model-select option[value=\"${savedClaudeModel}\"]`)) {\r\n                claudeModelSelect.value = savedClaudeModel;\r\n                selectedClaudeModel = savedClaudeModel;\r\n            }\r\n\r\n            // Show/hide Claude model selection\r\n            updateClaudeModelVisibility();\r\n        }\r\n\r\n        /**\r\n         * Update Claude model selection visibility\r\n         */\r\n        function updateClaudeModelVisibility() {\r\n            if (claudeModelSelection && currentProvider === 'claude' && aiConfig?.claude_available) {\r\n                claudeModelSelection.style.display = 'flex';\r\n            } else if (claudeModelSelection) {\r\n                claudeModelSelection.style.display = 'none';\r\n            }\r\n        }\r\n\r\n        // Provider selection change handler\r\n        if (providerSelect) {\r\n            providerSelect.addEventListener('change', function() {\r\n                currentProvider = this.value;\r\n                localStorage.setItem('ai-chat-provider', currentProvider);\r\n                updateClaudeModelVisibility();\r\n                \r\n                // Clear chat messages when switching providers\r\n                messagesContainer.innerHTML = `\r\n                    <div class=\"ai-message\">\r\n                        <strong>AI Assistant:</strong> Hello! I'm now using ${currentProvider === 'claude' ? 'Claude API' : 'Fireworks.ai'}. How can I help you today?\r\n                    </div>\r\n                `;\r\n            });\r\n        }\r\n\r\n        // Claude model selection change handler\r\n        if (claudeModelSelect) {\r\n            claudeModelSelect.addEventListener('change', function() {\r\n                selectedClaudeModel = this.value;\r\n                localStorage.setItem('ai-chat-claude-model', selectedClaudeModel);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Send a message to the AI assistant\r\n         */\r\n        function sendMessage() {\r\n            const message = chatInput.value.trim();\r\n            if (!message) {\r\n                return;\r\n            }\r\n\r\n            // Check if we have a valid configuration\r\n            if (!aiConfig || (!aiConfig.fireworks_available && !aiConfig.claude_available)) {\r\n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\r\n                return;\r\n            }\r\n\r\n            // Add user message\r\n            const userMessageDiv = document.createElement(\"div\");\r\n            userMessageDiv.className = \"user-message\";\r\n            userMessageDiv.innerHTML = \"<strong>You:</strong> \" + message;\r\n            messagesContainer.appendChild(userMessageDiv);\r\n\r\n            // Clear input\r\n            chatInput.value = \"\";\r\n\r\n            // Show loading state\r\n            const loadingDiv = document.createElement(\"div\");\r\n            loadingDiv.className = \"ai-message\";\r\n            loadingDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Getting your credentials for ${currentProvider}...</em>`;\r\n            messagesContainer.appendChild(loadingDiv);\r\n\r\n            // Get user credentials via AJAX\r\n            Ajax.call([{\r\n                methodname: 'block_aiassistant_get_user_credentials',\r\n                args: { provider: currentProvider },\r\n                done: function(credentials) {\r\n                    // Remove loading message\r\n                    messagesContainer.removeChild(loadingDiv);\r\n\r\n                    if (credentials.success) {\r\n                        // Now make the actual chat request using those credentials\r\n                        if (currentProvider === 'claude') {\r\n                            sendClaudeChatMessage(message, credentials.api_key);\r\n                        } else {\r\n                            sendFireworksChatMessage(message, credentials.api_key);\r\n                        }\r\n                    } else {\r\n                        const errorDiv = document.createElement(\"div\");\r\n                        errorDiv.className = \"ai-message\";\r\n                        errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Error: \" + credentials.message + \"</em>\";\r\n                        messagesContainer.appendChild(errorDiv);\r\n                    }\r\n                },\r\n                fail: function(error) {\r\n                    // Remove loading message\r\n                    if (messagesContainer.contains(loadingDiv)) {\r\n                        messagesContainer.removeChild(loadingDiv);\r\n                    }\r\n\r\n                    const errorDiv = document.createElement(\"div\");\r\n                    errorDiv.className = \"ai-message\";\r\n                    errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Failed to get credentials: \" +\r\n                        (error.message || 'Unknown error') + \"</em>\";\r\n                    messagesContainer.appendChild(errorDiv);\r\n                }\r\n            }]);\r\n\r\n            // Scroll to bottom\r\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n        }\r\n\r\n        /**\r\n         * Send chat message to Fireworks API (Direct API approach)\r\n         * @param {string} message - The message to send\r\n         * @param {string} apiKey - The master API key for authentication\r\n         */\r\n        async function sendFireworksChatMessage(message, apiKey) {\r\n            setTimeout(async function() {\r\n                const aiMessageDiv = document.createElement(\"div\");\r\n                aiMessageDiv.className = \"ai-message\";\r\n                aiMessageDiv.innerHTML = \"<strong>AI Assistant (Fireworks):</strong> <span class='response-text'>Thinking...</span>\";\r\n                messagesContainer.appendChild(aiMessageDiv);\r\n                const responseSpan = aiMessageDiv.querySelector('.response-text');\r\n                \r\n                const url = 'https://api.fireworks.ai/inference/v1/chat/completions';\r\n                const options = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + apiKey,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"model\": \"accounts/fireworks/models/llama-v3p1-8b-instruct\",\r\n                        \"messages\": [\r\n                            {\r\n                                \"role\": \"user\",\r\n                                \"content\": message\r\n                            }\r\n                        ],\r\n                        \"max_tokens\": 2000,\r\n                        \"prompt_truncate_len\": 1500,\r\n                        \"temperature\": 0.7,\r\n                        \"top_p\": 1,\r\n                        \"top_k\": 50,\r\n                        \"frequency_penalty\": 0,\r\n                        \"perf_metrics_in_response\": false,\r\n                        \"presence_penalty\": 0,\r\n                        \"repetition_penalty\": 1,\r\n                        \"mirostat_lr\": 0.1,\r\n                        \"mirostat_target\": 1.5,\r\n                        \"n\": 1,\r\n                        \"ignore_eos\": false,\r\n                        \"response_format\": null,\r\n                        \"stream\": false,\r\n                        \"context_length_exceeded_behavior\": \"truncate\"\r\n                    })\r\n                };\r\n                \r\n                try {\r\n                    const response = await fetch(url, options);\r\n                    const data = await response.json();\r\n                    console.log('Fireworks API response:', data);\r\n                    \r\n                    if (data.choices && data.choices[0] && data.choices[0].message) {\r\n                        let content = data.choices[0].message.content;\r\n                        \r\n                        // Convert markdown to HTML if marked is available\r\n                        if (typeof marked !== 'undefined' && marked.parse) {\r\n                            const htmlContent = marked.parse(content);\r\n                            responseSpan.innerHTML = htmlContent;\r\n                        } else {\r\n                            responseSpan.textContent = content;\r\n                        }\r\n                    } else if (data.error) {\r\n                        responseSpan.textContent = 'Error: ' + (data.error.message || data.error);\r\n                        console.error('Fireworks API error:', data.error);\r\n                    } else {\r\n                        responseSpan.textContent = 'Sorry, I could not process your request. No response from Fireworks API.';\r\n                        console.error('Unexpected Fireworks API response:', data);\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Fireworks API call failed:', error);\r\n                    responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\r\n                }\r\n\r\n                // Scroll to bottom\r\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n            }, 1000);\r\n        }\r\n\r\n        /**\r\n         * Send chat message to Claude API\r\n         * @param {string} message - The message to send\r\n         * @param {string} apiKey - The API key for authentication\r\n         */\r\n        async function sendClaudeChatMessage(message, apiKey) {\r\n            setTimeout(async function() {\r\n                const aiMessageDiv = document.createElement(\"div\");\r\n                aiMessageDiv.className = \"ai-message\";\r\n                aiMessageDiv.innerHTML = `<strong>AI Assistant (Claude):</strong> <span class='response-text'>Thinking...</span>`;\r\n                messagesContainer.appendChild(aiMessageDiv);\r\n                const responseSpan = aiMessageDiv.querySelector('.response-text');\r\n                \r\n                // Determine which model to use with safe fallback\r\n                let modelToUse = selectedClaudeModel;\r\n                if (!modelToUse && aiConfig && aiConfig.default_claude_model) {\r\n                    modelToUse = aiConfig.default_claude_model;\r\n                }\r\n                if (!modelToUse) {\r\n                    modelToUse = 'claude-sonnet-4-20250514'; // hardcoded fallback\r\n                }\r\n\r\n                const url = 'https://api.anthropic.com/v1/messages';\r\n                const options = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'x-api-key': apiKey,\r\n                        'Content-Type': 'application/json',\r\n                        'anthropic-version': '2023-06-01'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        model: modelToUse,\r\n                        max_tokens: 2000,\r\n                        messages: [\r\n                            {\r\n                                role: \"user\",\r\n                                content: message\r\n                            }\r\n                        ]\r\n                    })\r\n                };\r\n                \r\n                try {\r\n                    const response = await fetch(url, options);\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n                    \r\n                    if (data.content && data.content[0] && data.content[0].text) {\r\n                        const content = data.content[0].text;\r\n                        // Convert markdown to HTML if marked is available\r\n                        if (typeof marked !== 'undefined' && marked.parse) {\r\n                            const htmlContent = marked.parse(content);\r\n                            responseSpan.innerHTML = htmlContent;\r\n                        } else {\r\n                            responseSpan.textContent = content;\r\n                        }\r\n                    } else if (data.error) {\r\n                        responseSpan.textContent = 'Error: ' + data.error.message;\r\n                    } else {\r\n                        responseSpan.textContent = 'Sorry, I could not process your request.';\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\r\n                }\r\n\r\n                // Scroll to bottom\r\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n            }, 1000);\r\n        }\r\n\r\n        sendButton.addEventListener(\"click\", sendMessage);\r\n\r\n        chatInput.addEventListener(\"keypress\", function(e) {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n                e.preventDefault();\r\n                sendMessage();\r\n            }\r\n        });\r\n    };\r\n\r\n    // Try to initialize immediately if DOM is ready, otherwise wait for DOMContentLoaded\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', initializeChat);\r\n    } else {\r\n        // DOM is already loaded, initialize immediately\r\n        initializeChat();\r\n    }\r\n};"],"mappings":"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","ignoreList":[]}
=======
{"version":3,"file":"chat_interface.min.js","names":["Ajax","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","_typeof","has","get","set","_t7","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_regenerator","Symbol","iterator","toStringTag","c","prototype","Generator","u","create","_regeneratorDefine2","p","y","G","v","a","d","bind","length","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","displayName","w","m","_regeneratorDefine","_invoke","enumerable","configurable","writable","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","init","_exports","initializeChat","console","log","sendButton","document","getElementById","chatInput","messagesContainer","chatContainer","resizeHandle","providerSelect","claudeModelSelect","claudeModelSelection","error","aiConfig","currentProvider","selectedClaudeModel","loadAIConfiguration","savedWidth","localStorage","getItem","savedHeight","style","width","height","isResizing","startX","startY","startWidth","startHeight","addEventListener","classList","add","clientX","clientY","parseInt","window","getComputedStyle","preventDefault","newWidth","Math","max","min","newHeight","setItem","remove","methodname","args","config","success","setupProviderUI","message","claude_available","fireworks_available","claude_models","default_claude_model","showConfigurationError","fail","stack","errorDiv","createElement","className","innerHTML","concat","appendChild","hasAvailableProvider","fireworksOption","textContent","claudeOption","disabled","color","savedProvider","savedClaudeModel","querySelector","updateClaudeModelVisibility","_aiConfig","display","sendMessage","trim","userMessageDiv","loadingDiv","provider","credentials","removeChild","sendClaudeChatMessage","api_key","sendFireworksChatMessage","contains","scrollTop","scrollHeight","_x","_x2","_sendFireworksChatMessage","_callee2","apiKey","_context2","setTimeout","_callee","aiMessageDiv","responseSpan","url","options","response","errorData","reader","decoder","responseContent","hasReceivedContent","_yield$reader$read","chunk","lines","_iterator","_step","line","data","parsed","content","htmlContent","_t","_t2","_t3","_context","method","headers","body","JSON","stringify","fetch","ok","text","Error","status","statusText","getReader","TextDecoder","read","decode","split","startsWith","parse","choices","delta","marked","releaseLock","_x3","_x4","_sendClaudeChatMessage","_callee4","_context4","_callee3","modelToUse","_yield$reader$read2","_iterator2","_step2","_t4","_t5","_t6","_context3","model","max_tokens","messages","role","stream","type","key","shiftKey","readyState"],"sources":["../src/chat_interface.js"],"sourcesContent":["// Standard license block omitted for brevity\n/**\n * @module     block_aiassistant/chat_interface\n * @copyright  2025 Your Name\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Ajax from 'core/ajax';\n\n/**\n * Initialize the AI chat interface\n */\nexport const init = () => {\n    // Function to initialize the chat interface\n    const initializeChat = () => {\n        console.log('AI Chat: Initializing...');\n        \n        const sendButton = document.getElementById(\"ai-chat-send\");\n        const chatInput = document.getElementById(\"ai-chat-input\");\n        const messagesContainer = document.getElementById(\"ai-chat-messages\");\n        const chatContainer = document.getElementById(\"ai-chat-container\");\n        const resizeHandle = document.getElementById(\"ai-resize-handle\");\n        const providerSelect = document.getElementById(\"ai-provider-select\");\n        const claudeModelSelect = document.getElementById(\"claude-model-select\");\n        const claudeModelSelection = document.getElementById(\"claude-model-selection\");\n\n        console.log('AI Chat: Elements found:', {\n            sendButton: !!sendButton,\n            chatInput: !!chatInput,\n            messagesContainer: !!messagesContainer,\n            chatContainer: !!chatContainer,\n            resizeHandle: !!resizeHandle,\n            providerSelect: !!providerSelect,\n            claudeModelSelect: !!claudeModelSelect\n        });\n\n        if (!sendButton || !chatInput || !messagesContainer || !providerSelect) {\n            console.error('AI Chat: Required elements not found');\n            return;\n        }\n\n        // Global configuration storage\n        let aiConfig = null;\n        let currentProvider = 'fireworks';\n        let selectedClaudeModel = '';\n\n        // Load AI configuration on startup\n        loadAIConfiguration();\n\n        // Load saved dimensions from localStorage\n        const savedWidth = localStorage.getItem('ai-chat-width');\n        const savedHeight = localStorage.getItem('ai-chat-height');\n\n        if (savedWidth) {\n            chatContainer.style.width = savedWidth + 'px';\n        }\n        if (savedHeight) {\n            messagesContainer.style.height = savedHeight + 'px';\n        }\n\n        // Resize functionality\n        let isResizing = false;\n        let startX, startY, startWidth, startHeight;\n\n        if (resizeHandle) {\n            resizeHandle.addEventListener('mousedown', function(e) {\n                isResizing = true;\n                chatContainer.classList.add('resizing');\n                startX = e.clientX;\n                startY = e.clientY;\n                startWidth = parseInt(window.getComputedStyle(chatContainer).width, 10);\n                startHeight = parseInt(window.getComputedStyle(messagesContainer).height, 10);\n                e.preventDefault();\n            });\n        }\n\n        document.addEventListener('mousemove', function(e) {\n            if (!isResizing) {\n                return;\n            }\n            const newWidth = Math.max(300, Math.min(800, startWidth + (e.clientX - startX)));\n            const newHeight = Math.max(150, Math.min(600, startHeight + (e.clientY - startY)));\n            chatContainer.style.width = newWidth + 'px';\n            messagesContainer.style.height = newHeight + 'px';\n            // Save to localStorage\n            localStorage.setItem('ai-chat-width', newWidth);\n            localStorage.setItem('ai-chat-height', newHeight);\n        });\n\n        document.addEventListener('mouseup', function() {\n            if (isResizing) {\n                isResizing = false;\n                chatContainer.classList.remove('resizing');\n            }\n        });\n\n        /**\n         * Load AI configuration from backend\n         */\n        function loadAIConfiguration() {\n            console.log('DEBUG: Starting AJAX call to block_aiassistant_get_ai_config');\n            \n            Ajax.call([{\n                methodname: 'block_aiassistant_get_ai_config',\n                args: {},\n                done: function(config) {\n                    console.log('DEBUG: AJAX success, config received:', config);\n                    \n                    if (config && config.success) {\n                        aiConfig = config;\n                        console.log('AI Config loaded successfully:', aiConfig);\n                        setupProviderUI();\n                    } else {\n                        console.error('Failed to load AI configuration:', config ? config.message : 'No response received');\n                        console.error('Full config object:', config);\n                        aiConfig = {\n                            success: false,\n                            claude_available: false,\n                            fireworks_available: false,\n                            claude_models: [],\n                            default_claude_model: ''\n                        };\n                        showConfigurationError('Failed to load AI configuration. Please check plugin settings.');\n                    }\n                },\n                fail: function(error) {\n                    console.error('AJAX call failed:', error);\n                    console.error('Error details:', {\n                        name: error.name,\n                        message: error.message,\n                        stack: error.stack\n                    });\n                    aiConfig = {\n                        success: false,\n                        claude_available: false,\n                        fireworks_available: false,\n                        claude_models: [],\n                        default_claude_model: ''\n                    };\n                    showConfigurationError('Could not connect to AI configuration service.');\n                }\n            }]);\n        }\n\n        /**\n         * Show configuration error in chat\n         */\n        function showConfigurationError(message) {\n            const errorDiv = document.createElement(\"div\");\n            errorDiv.className = \"ai-message\";\n            errorDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Error: ${message}</em>`;\n            messagesContainer.appendChild(errorDiv);\n        }\n\n        /**\n         * Setup provider UI based on configuration\n         */\n        function setupProviderUI() {\n            console.log('DEBUG: setupProviderUI called with aiConfig:', aiConfig);\n            \n            // Ensure aiConfig exists before proceeding\n            if (!aiConfig) {\n                console.error('AI configuration not loaded, cannot setup provider UI');\n                return;\n            }\n\n            console.log('DEBUG: aiConfig properties:', {\n                success: aiConfig.success,\n                claude_available: aiConfig.claude_available,\n                fireworks_available: aiConfig.fireworks_available,\n                default_claude_model: aiConfig.default_claude_model,\n                claude_models: aiConfig.claude_models\n            });\n\n            // Clear existing options\n            providerSelect.innerHTML = '';\n            if (claudeModelSelect) {\n                claudeModelSelect.innerHTML = '';\n            }\n\n            let hasAvailableProvider = false;\n\n            // Add available providers\n            if (aiConfig && aiConfig.fireworks_available) {\n                const fireworksOption = document.createElement('option');\n                fireworksOption.value = 'fireworks';\n                fireworksOption.textContent = 'Fireworks.ai';\n                providerSelect.appendChild(fireworksOption);\n                hasAvailableProvider = true;\n            }\n\n            if (aiConfig && aiConfig.claude_available) {\n                const claudeOption = document.createElement('option');\n                claudeOption.value = 'claude';\n                claudeOption.textContent = 'Claude API (Under maintenance - coming soon)';\n                claudeOption.disabled = true; // Temporarily disable Claude\n                claudeOption.style.color = '#999'; // Grey out the option\n                providerSelect.appendChild(claudeOption);\n                // Don't set hasAvailableProvider = true for Claude temporarily\n\n                // Comment out Claude model population for now\n                /*\n                // Populate Claude models if element exists and models are available\n                if (claudeModelSelect && aiConfig.claude_models && Array.isArray(aiConfig.claude_models)) {\n                    aiConfig.claude_models.forEach(model => {\n                        const modelOption = document.createElement('option');\n                        modelOption.value = model.key;\n                        modelOption.textContent = model.name;\n                        claudeModelSelect.appendChild(modelOption);\n                    });\n\n                    // Set default Claude model\n                    if (aiConfig && aiConfig.default_claude_model) {\n                        claudeModelSelect.value = aiConfig.default_claude_model;\n                        selectedClaudeModel = aiConfig.default_claude_model;\n                    }\n                }\n                */\n            }\n\n            // If no providers are available, add disabled options\n            if (!hasAvailableProvider) {\n                if (!aiConfig || !aiConfig.fireworks_available) {\n                    const fireworksOption = document.createElement('option');\n                    fireworksOption.value = 'fireworks';\n                    fireworksOption.textContent = 'Fireworks.ai (Not configured)';\n                    fireworksOption.disabled = true;\n                    providerSelect.appendChild(fireworksOption);\n                }\n\n                if (!aiConfig || !aiConfig.claude_available) {\n                    const claudeOption = document.createElement('option');\n                    claudeOption.value = 'claude';\n                    claudeOption.textContent = 'Claude API (Not configured)';\n                    claudeOption.disabled = true;\n                    providerSelect.appendChild(claudeOption);\n                }\n                \n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\n                return;\n            }\n\n            // Restore saved selections\n            const savedProvider = localStorage.getItem('ai-chat-provider');\n            const savedClaudeModel = localStorage.getItem('ai-chat-claude-model');\n\n            if (savedProvider && document.querySelector(`option[value=\"${savedProvider}\"]`)) {\n                providerSelect.value = savedProvider;\n                currentProvider = savedProvider;\n            } else if (aiConfig && aiConfig.fireworks_available) {\n                currentProvider = 'fireworks';\n                providerSelect.value = 'fireworks';\n            } else if (aiConfig && aiConfig.claude_available) {\n                currentProvider = 'claude';\n                providerSelect.value = 'claude';\n            }\n\n            if (savedClaudeModel && claudeModelSelect && document.querySelector(`#claude-model-select option[value=\"${savedClaudeModel}\"]`)) {\n                claudeModelSelect.value = savedClaudeModel;\n                selectedClaudeModel = savedClaudeModel;\n            }\n\n            // Show/hide Claude model selection\n            updateClaudeModelVisibility();\n        }\n\n        /**\n         * Update Claude model selection visibility\n         */\n        function updateClaudeModelVisibility() {\n            if (claudeModelSelection && currentProvider === 'claude' && aiConfig?.claude_available) {\n                claudeModelSelection.style.display = 'flex';\n            } else if (claudeModelSelection) {\n                claudeModelSelection.style.display = 'none';\n            }\n        }\n\n        // Provider selection change handler\n        if (providerSelect) {\n            providerSelect.addEventListener('change', function() {\n                currentProvider = this.value;\n                localStorage.setItem('ai-chat-provider', currentProvider);\n                updateClaudeModelVisibility();\n                \n                // Clear chat messages when switching providers\n                messagesContainer.innerHTML = `\n                    <div class=\"ai-message\">\n                        <strong>AI Assistant:</strong> Hello! I'm now using ${currentProvider === 'claude' ? 'Claude API' : 'Fireworks.ai'}. How can I help you today?\n                    </div>\n                `;\n            });\n        }\n\n        // Claude model selection change handler\n        if (claudeModelSelect) {\n            claudeModelSelect.addEventListener('change', function() {\n                selectedClaudeModel = this.value;\n                localStorage.setItem('ai-chat-claude-model', selectedClaudeModel);\n            });\n        }\n\n        /**\n         * Send a message to the AI assistant\n         */\n        function sendMessage() {\n            const message = chatInput.value.trim();\n            if (!message) {\n                return;\n            }\n\n            // Check if we have a valid configuration\n            if (!aiConfig || (!aiConfig.fireworks_available && !aiConfig.claude_available)) {\n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\n                return;\n            }\n\n            // Add user message\n            const userMessageDiv = document.createElement(\"div\");\n            userMessageDiv.className = \"user-message\";\n            userMessageDiv.innerHTML = \"<strong>You:</strong> \" + message;\n            messagesContainer.appendChild(userMessageDiv);\n\n            // Clear input\n            chatInput.value = \"\";\n\n            // Show loading state\n            const loadingDiv = document.createElement(\"div\");\n            loadingDiv.className = \"ai-message\";\n            loadingDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Getting your credentials for ${currentProvider}...</em>`;\n            messagesContainer.appendChild(loadingDiv);\n\n            // Get user credentials via AJAX\n            Ajax.call([{\n                methodname: 'block_aiassistant_get_user_credentials',\n                args: { provider: currentProvider },\n                done: function(credentials) {\n                    // Remove loading message\n                    messagesContainer.removeChild(loadingDiv);\n\n                    if (credentials.success) {\n                        // Now make the actual chat request using those credentials\n                        if (currentProvider === 'claude') {\n                            sendClaudeChatMessage(message, credentials.api_key);\n                        } else {\n                            sendFireworksChatMessage(message, credentials.api_key);\n                        }\n                    } else {\n                        const errorDiv = document.createElement(\"div\");\n                        errorDiv.className = \"ai-message\";\n                        errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Error: \" + credentials.message + \"</em>\";\n                        messagesContainer.appendChild(errorDiv);\n                    }\n                },\n                fail: function(error) {\n                    // Remove loading message\n                    if (messagesContainer.contains(loadingDiv)) {\n                        messagesContainer.removeChild(loadingDiv);\n                    }\n\n                    const errorDiv = document.createElement(\"div\");\n                    errorDiv.className = \"ai-message\";\n                    errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Failed to get credentials: \" +\n                        (error.message || 'Unknown error') + \"</em>\";\n                    messagesContainer.appendChild(errorDiv);\n                }\n            }]);\n\n            // Scroll to bottom\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n        }\n\n        /**\n         * Send chat message to Fireworks API with streaming support\n         * @param {string} message - The message to send\n         * @param {string} apiKey - The master API key for authentication\n         */\n        async function sendFireworksChatMessage(message, apiKey) {\n            setTimeout(async function() {\n                const aiMessageDiv = document.createElement(\"div\");\n                aiMessageDiv.className = \"ai-message\";\n                aiMessageDiv.innerHTML = \"<strong>AI Assistant (Fireworks):</strong> <span class='response-text'></span>\";\n                messagesContainer.appendChild(aiMessageDiv);\n                const responseSpan = aiMessageDiv.querySelector('.response-text');\n                \n                const url = 'https://api.fireworks.ai/inference/v1/chat/completions';\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': 'Bearer ' + apiKey,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"model\": \"accounts/fireworks/models/llama-v3p1-8b-instruct\",\n                        \"messages\": [\n                            {\n                                \"role\": \"user\",\n                                \"content\": message\n                            }\n                        ],\n                        \"max_tokens\": 2000,\n                        \"prompt_truncate_len\": 1500,\n                        \"temperature\": 0.7,\n                        \"top_p\": 1,\n                        \"top_k\": 50,\n                        \"frequency_penalty\": 0,\n                        \"perf_metrics_in_response\": false,\n                        \"presence_penalty\": 0,\n                        \"repetition_penalty\": 1,\n                        \"mirostat_lr\": 0.1,\n                        \"mirostat_target\": 1.5,\n                        \"n\": 1,\n                        \"ignore_eos\": false,\n                        \"response_format\": null,\n                        \"stream\": true,\n                        \"context_length_exceeded_behavior\": \"truncate\"\n                    })\n                };\n                \n                try {\n                    const response = await fetch(url, options);\n                    \n                    if (!response.ok) {\n                        const errorData = await response.text();\n                        console.error('Fireworks API error response:', errorData);\n                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                    }\n                    \n                    const reader = response.body.getReader();\n                    const decoder = new TextDecoder();\n                    let responseContent = '';\n                    let hasReceivedContent = false;\n                    \n                    try {\n                        while (true) {\n                            const { done, value } = await reader.read();\n                            \n                            if (done) {\n                                break;\n                            }\n                            \n                            const chunk = decoder.decode(value);\n                            const lines = chunk.split('\\n');\n                            \n                            for (const line of lines) {\n                                if (line.startsWith('data: ')) {\n                                    const data = line.slice(6);\n                                    \n                                    if (data === '[DONE]') {\n                                        break;\n                                    }\n                                    \n                                    try {\n                                        const parsed = JSON.parse(data);\n                                        \n                                        if (parsed.error) {\n                                            throw new Error(parsed.error.message || 'API error');\n                                        }\n                                        \n                                        if (parsed.choices && parsed.choices[0] && parsed.choices[0].delta) {\n                                            const content = parsed.choices[0].delta.content || '';\n                                            if (content) {\n                                                responseContent += content;\n                                                hasReceivedContent = true;\n                                                \n                                                // Convert markdown to HTML if marked is available\n                                                if (typeof marked !== 'undefined' && marked.parse) {\n                                                    const htmlContent = marked.parse(responseContent);\n                                                    responseSpan.innerHTML = htmlContent;\n                                                } else {\n                                                    responseSpan.textContent = responseContent;\n                                                }\n                                                \n                                                // Scroll to bottom\n                                                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n                                            }\n                                        }\n                                    } catch (parseError) {\n                                        console.log('Non-JSON data chunk:', data);\n                                    }\n                                }\n                            }\n                        }\n                    } finally {\n                        reader.releaseLock();\n                    }\n                    \n                    // Check if we received any content\n                    if (!hasReceivedContent) {\n                        responseSpan.textContent = 'No response received from Fireworks API.';\n                    }\n                    \n                } catch (error) {\n                    console.error('Fireworks API call failed:', error);\n                    responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\n                }\n\n                // Final scroll to bottom\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n            }, 1000);\n        }\n\n        /**\n         * Send chat message to Claude API with streaming support\n         * @param {string} message - The message to send\n         * @param {string} apiKey - The API key for authentication\n         */\n        async function sendClaudeChatMessage(message, apiKey) {\n            setTimeout(async function() {\n                const aiMessageDiv = document.createElement(\"div\");\n                aiMessageDiv.className = \"ai-message\";\n                aiMessageDiv.innerHTML = `<strong>AI Assistant (Claude):</strong> <span class='response-text'></span>`;\n                messagesContainer.appendChild(aiMessageDiv);\n                const responseSpan = aiMessageDiv.querySelector('.response-text');\n                \n                // Determine which model to use with safe fallback\n                let modelToUse = selectedClaudeModel;\n                if (!modelToUse && aiConfig && aiConfig.default_claude_model) {\n                    modelToUse = aiConfig.default_claude_model;\n                }\n                if (!modelToUse) {\n                    modelToUse = 'claude-sonnet-4-20250514'; // hardcoded fallback\n                }\n\n                const url = 'https://api.anthropic.com/v1/messages';\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'x-api-key': apiKey,\n                        'Content-Type': 'application/json',\n                        'anthropic-version': '2023-06-01'\n                    },\n                    body: JSON.stringify({\n                        model: modelToUse,\n                        max_tokens: 2000,\n                        messages: [\n                            {\n                                role: \"user\",\n                                content: message\n                            }\n                        ],\n                        stream: true\n                    })\n                };\n                \n                try {\n                    const response = await fetch(url, options);\n                    \n                    if (!response.ok) {\n                        const errorData = await response.text();\n                        console.error('Claude API error response:', errorData);\n                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                    }\n                    \n                    const reader = response.body.getReader();\n                    const decoder = new TextDecoder();\n                    let responseContent = '';\n                    let hasReceivedContent = false;\n                    \n                    try {\n                        while (true) {\n                            const { done, value } = await reader.read();\n                            \n                            if (done) {\n                                break;\n                            }\n                            \n                            const chunk = decoder.decode(value);\n                            const lines = chunk.split('\\n');\n                            \n                            for (const line of lines) {\n                                if (line.startsWith('data: ')) {\n                                    const data = line.slice(6);\n                                    \n                                    if (data === '[DONE]') {\n                                        break;\n                                    }\n                                    \n                                    try {\n                                        const parsed = JSON.parse(data);\n                                        \n                                        if (parsed.type === 'error') {\n                                            console.error('Claude API error:', parsed.error);\n                                            throw new Error(parsed.error.message || 'Claude API error');\n                                        }\n                                        \n                                        if (parsed.type === 'content_block_delta' && parsed.delta && parsed.delta.text) {\n                                            const content = parsed.delta.text;\n                                            responseContent += content;\n                                            hasReceivedContent = true;\n                                            \n                                            // Convert markdown to HTML if marked is available\n                                            if (typeof marked !== 'undefined' && marked.parse) {\n                                                const htmlContent = marked.parse(responseContent);\n                                                responseSpan.innerHTML = htmlContent;\n                                            } else {\n                                                responseSpan.textContent = responseContent;\n                                            }\n                                            \n                                            // Scroll to bottom\n                                            messagesContainer.scrollTop = messagesContainer.scrollHeight;\n                                        }\n                                    } catch (parseError) {\n                                        console.log('Non-JSON data chunk:', data);\n                                    }\n                                }\n                            }\n                        }\n                    } finally {\n                        reader.releaseLock();\n                    }\n                    \n                    // Check if we received any content\n                    if (!hasReceivedContent) {\n                        responseSpan.textContent = 'No response received from Claude API.';\n                    }\n                    \n                } catch (error) {\n                    console.error('Claude API call failed:', error);\n                    responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\n                }\n\n                // Final scroll to bottom\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n            }, 1000);\n        }\n\n        sendButton.addEventListener(\"click\", sendMessage);\n\n        chatInput.addEventListener(\"keypress\", function(e) {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n                e.preventDefault();\n                sendMessage();\n            }\n        });\n    };\n\n    // Try to initialize immediately if DOM is ready, otherwise wait for DOMContentLoaded\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', initializeChat);\n    } else {\n        // DOM is already loaded, initialize immediately\n        initializeChat();\n    }\n};"],"mappings":";;;;;;;;EAOAA,IAAA,GAAAC,uBAAA,CAAAD,IAAA;EAAkC,SAAAC,wBAAAC,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAH,uBAAA,YAAAA,wBAAAC,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,gBAAAW,OAAA,CAAAX,CAAA,0BAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAM,GAAA,CAAAZ,CAAA,UAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,GAAAM,CAAA,CAAAQ,GAAA,CAAAd,CAAA,EAAAQ,CAAA,cAAAO,GAAA,IAAAf,CAAA,gBAAAe,GAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAe,GAAA,OAAAR,CAAA,IAAAD,CAAA,GAAAY,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAApB,CAAA,EAAAe,GAAA,OAAAR,CAAA,CAAAM,GAAA,IAAAN,CAAA,CAAAO,GAAA,IAAAR,CAAA,CAAAE,CAAA,EAAAO,GAAA,EAAAR,CAAA,IAAAC,CAAA,CAAAO,GAAA,IAAAf,CAAA,CAAAe,GAAA,WAAAP,CAAA,KAAAR,CAAA,EAAAC,CAAA;EAAA,SAAAoB,aAAA,IANlC,uKAAArB,CAAA,EAAAC,CAAA,EAAAE,CAAA,wBAAAmB,MAAA,GAAAA,MAAA,OAAAlB,CAAA,GAAAD,CAAA,CAAAoB,QAAA,kBAAAjB,CAAA,GAAAH,CAAA,CAAAqB,WAAA,8BAAAjB,EAAAJ,CAAA,EAAAC,CAAA,EAAAE,CAAA,EAAAC,CAAA,QAAAkB,CAAA,GAAArB,CAAA,IAAAA,CAAA,CAAAsB,SAAA,YAAAC,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAC,CAAA,GAAAV,MAAA,CAAAW,MAAA,CAAAJ,CAAA,CAAAC,SAAA,UAAAI,mBAAA,CAAAF,CAAA,uBAAAzB,CAAA,EAAAC,CAAA,EAAAE,CAAA,QAAAC,CAAA,EAAAkB,CAAA,EAAAG,CAAA,EAAApB,CAAA,MAAAuB,CAAA,GAAAzB,CAAA,QAAA0B,CAAA,OAAAC,CAAA,KAAAF,CAAA,KAAA3B,CAAA,KAAA8B,CAAA,EAAAlC,CAAA,EAAAmC,CAAA,EAAAC,CAAA,EAAA5B,CAAA,EAAA4B,CAAA,CAAAC,IAAA,CAAArC,CAAA,MAAAoC,CAAA,WAAAA,EAAAnC,CAAA,EAAAE,CAAA,WAAAI,CAAA,GAAAN,CAAA,EAAAwB,CAAA,MAAAG,CAAA,GAAA5B,CAAA,EAAAiC,CAAA,CAAA7B,CAAA,GAAAD,CAAA,EAAAgC,CAAA,gBAAAC,EAAAjC,CAAA,EAAAC,CAAA,SAAAqB,CAAA,GAAAtB,CAAA,EAAAyB,CAAA,GAAAxB,CAAA,EAAAH,CAAA,OAAA+B,CAAA,IAAAxB,CAAA,KAAAF,CAAA,IAAAL,CAAA,GAAA8B,CAAA,CAAAO,MAAA,EAAArC,CAAA,UAAAK,CAAA,EAAAC,CAAA,GAAAwB,CAAA,CAAA9B,CAAA,GAAAmC,CAAA,GAAAH,CAAA,CAAAF,CAAA,EAAAQ,CAAA,GAAAhC,CAAA,KAAAJ,CAAA,QAAAG,CAAA,GAAAiC,CAAA,KAAAnC,CAAA,MAAAwB,CAAA,GAAArB,CAAA,EAAAkB,CAAA,GAAAlB,CAAA,YAAAkB,CAAA,WAAAlB,CAAA,MAAAA,CAAA,MAAAP,CAAA,IAAAO,CAAA,OAAA6B,CAAA,MAAA9B,CAAA,GAAAH,CAAA,QAAAiC,CAAA,GAAA7B,CAAA,QAAAkB,CAAA,MAAAQ,CAAA,CAAAC,CAAA,GAAA9B,CAAA,EAAA6B,CAAA,CAAA7B,CAAA,GAAAG,CAAA,OAAA6B,CAAA,GAAAG,CAAA,KAAAjC,CAAA,GAAAH,CAAA,QAAAI,CAAA,MAAAH,CAAA,IAAAA,CAAA,GAAAmC,CAAA,MAAAhC,CAAA,MAAAJ,CAAA,EAAAI,CAAA,MAAAH,CAAA,EAAA6B,CAAA,CAAA7B,CAAA,GAAAmC,CAAA,EAAAd,CAAA,cAAAnB,CAAA,IAAAH,CAAA,aAAAgC,CAAA,QAAAH,CAAA,OAAA5B,CAAA,qBAAAE,CAAA,EAAAyB,CAAA,EAAAQ,CAAA,QAAA/B,CAAA,YAAAgC,SAAA,uCAAAR,CAAA,UAAAD,CAAA,IAAAK,CAAA,CAAAL,CAAA,EAAAQ,CAAA,GAAAd,CAAA,GAAAM,CAAA,EAAAH,CAAA,GAAAW,CAAA,GAAAtC,CAAA,GAAAwB,CAAA,OAAAzB,CAAA,GAAA4B,CAAA,MAAAI,CAAA,KAAAzB,CAAA,KAAAkB,CAAA,GAAAA,CAAA,QAAAA,CAAA,SAAAQ,CAAA,CAAA7B,CAAA,QAAAgC,CAAA,CAAAX,CAAA,EAAAG,CAAA,KAAAK,CAAA,CAAA7B,CAAA,GAAAwB,CAAA,GAAAK,CAAA,CAAAC,CAAA,GAAAN,CAAA,aAAApB,CAAA,MAAAD,CAAA,QAAAkB,CAAA,KAAAnB,CAAA,YAAAL,CAAA,GAAAM,CAAA,CAAAD,CAAA,WAAAL,CAAA,GAAAA,CAAA,CAAAgB,IAAA,CAAAV,CAAA,EAAAqB,CAAA,UAAAY,SAAA,2CAAAvC,CAAA,CAAAwC,IAAA,SAAAxC,CAAA,EAAA2B,CAAA,GAAA3B,CAAA,CAAAyC,KAAA,EAAAjB,CAAA,SAAAA,CAAA,oBAAAA,CAAA,KAAAxB,CAAA,GAAAM,CAAA,CAAAoC,MAAA,KAAA1C,CAAA,CAAAgB,IAAA,CAAAV,CAAA,GAAAkB,CAAA,SAAAG,CAAA,GAAAY,SAAA,uCAAAlC,CAAA,gBAAAmB,CAAA,OAAAlB,CAAA,GAAAP,CAAA,cAAAC,CAAA,IAAA+B,CAAA,GAAAC,CAAA,CAAA7B,CAAA,QAAAwB,CAAA,GAAAzB,CAAA,CAAAc,IAAA,CAAAb,CAAA,EAAA6B,CAAA,OAAAE,CAAA,kBAAAlC,CAAA,IAAAM,CAAA,GAAAP,CAAA,EAAAyB,CAAA,MAAAG,CAAA,GAAA3B,CAAA,cAAAO,CAAA,mBAAAkC,KAAA,EAAAzC,CAAA,EAAAwC,IAAA,EAAAT,CAAA,SAAA7B,CAAA,EAAAG,CAAA,EAAAC,CAAA,QAAAqB,CAAA,QAAAO,CAAA,gBAAAR,UAAA,cAAAiB,kBAAA,cAAAC,2BAAA,KAAA5C,CAAA,GAAAiB,MAAA,CAAA4B,cAAA,MAAArB,CAAA,MAAArB,CAAA,IAAAH,CAAA,CAAAA,CAAA,IAAAG,CAAA,SAAA0B,mBAAA,CAAA7B,CAAA,OAAAG,CAAA,iCAAAH,CAAA,GAAA2B,CAAA,GAAAiB,0BAAA,CAAAnB,SAAA,GAAAC,SAAA,CAAAD,SAAA,GAAAR,MAAA,CAAAW,MAAA,CAAAJ,CAAA,YAAAjB,EAAAR,CAAA,WAAAkB,MAAA,CAAA6B,cAAA,GAAA7B,MAAA,CAAA6B,cAAA,CAAA/C,CAAA,EAAA6C,0BAAA,KAAA7C,CAAA,CAAAS,SAAA,GAAAoC,0BAAA,EAAAf,mBAAA,CAAA9B,CAAA,EAAAM,CAAA,yBAAAN,CAAA,CAAA0B,SAAA,GAAAR,MAAA,CAAAW,MAAA,CAAAD,CAAA,GAAA5B,CAAA,WAAA4C,iBAAA,CAAAlB,SAAA,GAAAmB,0BAAA,EAAAf,mBAAA,CAAAF,CAAA,iBAAAiB,0BAAA,GAAAf,mBAAA,CAAAe,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAI,WAAA,wBAAAlB,mBAAA,CAAAe,0BAAA,EAAAvC,CAAA,wBAAAwB,mBAAA,CAAAF,CAAA,GAAAE,mBAAA,CAAAF,CAAA,EAAAtB,CAAA,gBAAAwB,mBAAA,CAAAF,CAAA,EAAAxB,CAAA,iCAAA0B,mBAAA,CAAAF,CAAA,8DAAAP,YAAA,YAAAA,aAAA,aAAA4B,CAAA,EAAA1C,CAAA,EAAA2C,CAAA,EAAA1C,CAAA;EAAA,SAAAsB,oBAAA9B,CAAA,EAAAG,CAAA,EAAAC,CAAA,EAAAH,CAAA,QAAAM,CAAA,GAAAW,MAAA,CAAAC,cAAA,QAAAZ,CAAA,uBAAAP,CAAA,IAAAO,CAAA,QAAAuB,mBAAA,YAAAqB,mBAAAnD,CAAA,EAAAG,CAAA,EAAAC,CAAA,EAAAH,CAAA,aAAAK,EAAAH,CAAA,EAAAC,CAAA,IAAA0B,mBAAA,CAAA9B,CAAA,EAAAG,CAAA,YAAAH,CAAA,gBAAAoD,OAAA,CAAAjD,CAAA,EAAAC,CAAA,EAAAJ,CAAA,SAAAG,CAAA,GAAAI,CAAA,GAAAA,CAAA,CAAAP,CAAA,EAAAG,CAAA,IAAAuC,KAAA,EAAAtC,CAAA,EAAAiD,UAAA,GAAApD,CAAA,EAAAqD,YAAA,GAAArD,CAAA,EAAAsD,QAAA,GAAAtD,CAAA,MAAAD,CAAA,CAAAG,CAAA,IAAAC,CAAA,IAAAE,CAAA,aAAAA,CAAA,cAAAA,CAAA,mBAAAwB,mBAAA,CAAA9B,CAAA,EAAAG,CAAA,EAAAC,CAAA,EAAAH,CAAA;EAAA,SAAAuD,2BAAArD,CAAA,EAAAH,CAAA,QAAAC,CAAA,yBAAAqB,MAAA,IAAAnB,CAAA,CAAAmB,MAAA,CAAAC,QAAA,KAAApB,CAAA,qBAAAF,CAAA,QAAAwD,KAAA,CAAAC,OAAA,CAAAvD,CAAA,MAAAF,CAAA,GAAA0D,2BAAA,CAAAxD,CAAA,MAAAH,CAAA,IAAAG,CAAA,uBAAAA,CAAA,CAAAmC,MAAA,IAAArC,CAAA,KAAAE,CAAA,GAAAF,CAAA,OAAA2D,EAAA,MAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAzD,CAAA,WAAAA,EAAA,WAAAwD,EAAA,IAAAzD,CAAA,CAAAmC,MAAA,KAAAG,IAAA,WAAAA,IAAA,MAAAC,KAAA,EAAAvC,CAAA,CAAAyD,EAAA,UAAA5D,CAAA,WAAAA,EAAAG,CAAA,UAAAA,CAAA,KAAAK,CAAA,EAAAqD,CAAA,gBAAArB,SAAA,iJAAAlC,CAAA,EAAA6B,CAAA,OAAAP,CAAA,gBAAAkC,CAAA,WAAAA,EAAA,IAAA7D,CAAA,GAAAA,CAAA,CAAAgB,IAAA,CAAAd,CAAA,MAAAC,CAAA,WAAAA,EAAA,QAAAD,CAAA,GAAAF,CAAA,CAAA8D,IAAA,WAAA5B,CAAA,GAAAhC,CAAA,CAAAsC,IAAA,EAAAtC,CAAA,KAAAH,CAAA,WAAAA,EAAAG,CAAA,IAAAyB,CAAA,OAAAtB,CAAA,GAAAH,CAAA,KAAAK,CAAA,WAAAA,EAAA,UAAA2B,CAAA,YAAAlC,CAAA,CAAA0C,MAAA,IAAA1C,CAAA,CAAA0C,MAAA,oBAAAf,CAAA,QAAAtB,CAAA;EAAA,SAAAqD,4BAAAxD,CAAA,EAAAgC,CAAA,QAAAhC,CAAA,2BAAAA,CAAA,SAAA6D,iBAAA,CAAA7D,CAAA,EAAAgC,CAAA,OAAAlC,CAAA,MAAAgE,QAAA,CAAAhD,IAAA,CAAAd,CAAA,EAAA+D,KAAA,6BAAAjE,CAAA,IAAAE,CAAA,CAAAgE,WAAA,KAAAlE,CAAA,GAAAE,CAAA,CAAAgE,WAAA,CAAAC,IAAA,aAAAnE,CAAA,cAAAA,CAAA,GAAAwD,KAAA,CAAAY,IAAA,CAAAlE,CAAA,oBAAAF,CAAA,+CAAAqE,IAAA,CAAArE,CAAA,IAAA+D,iBAAA,CAAA7D,CAAA,EAAAgC,CAAA;EAAA,SAAA6B,kBAAA7D,CAAA,EAAAgC,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAhC,CAAA,CAAAmC,MAAA,MAAAH,CAAA,GAAAhC,CAAA,CAAAmC,MAAA,YAAAtC,CAAA,MAAAI,CAAA,GAAAqD,KAAA,CAAAtB,CAAA,GAAAnC,CAAA,GAAAmC,CAAA,EAAAnC,CAAA,IAAAI,CAAA,CAAAJ,CAAA,IAAAG,CAAA,CAAAH,CAAA,UAAAI,CAAA;EAAA,SAAAmE,mBAAAnE,CAAA,EAAAH,CAAA,EAAAD,CAAA,EAAAG,CAAA,EAAAG,CAAA,EAAA6B,CAAA,EAAAV,CAAA,cAAAlB,CAAA,GAAAH,CAAA,CAAA+B,CAAA,EAAAV,CAAA,GAAAG,CAAA,GAAArB,CAAA,CAAAmC,KAAA,WAAAtC,CAAA,gBAAAJ,CAAA,CAAAI,CAAA,KAAAG,CAAA,CAAAkC,IAAA,GAAAxC,CAAA,CAAA2B,CAAA,IAAA4C,OAAA,CAAAC,OAAA,CAAA7C,CAAA,EAAA8C,IAAA,CAAAvE,CAAA,EAAAG,CAAA;EAAA,SAAAqE,kBAAAvE,CAAA,6BAAAH,CAAA,SAAAD,CAAA,GAAA4E,SAAA,aAAAJ,OAAA,WAAArE,CAAA,EAAAG,CAAA,QAAA6B,CAAA,GAAA/B,CAAA,CAAAyE,KAAA,CAAA5E,CAAA,EAAAD,CAAA,YAAA8E,MAAA1E,CAAA,IAAAmE,kBAAA,CAAApC,CAAA,EAAAhC,CAAA,EAAAG,CAAA,EAAAwE,KAAA,EAAAC,MAAA,UAAA3E,CAAA,cAAA2E,OAAA3E,CAAA,IAAAmE,kBAAA,CAAApC,CAAA,EAAAhC,CAAA,EAAAG,CAAA,EAAAwE,KAAA,EAAAC,MAAA,WAAA3E,CAAA,KAAA0E,KAAA,mBADA;EACA;AACA;AACA;AACA;AACA;EAIA;AACA;AACA;EACO,IAAME,IAAI,GAAAC,QAAA,CAAAD,IAAA,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACtB;IACA,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvC,IAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;MAC1D,IAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;MAC1D,IAAME,iBAAiB,GAAGH,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;MACrE,IAAMG,aAAa,GAAGJ,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC;MAClE,IAAMI,YAAY,GAAGL,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;MAChE,IAAMK,cAAc,GAAGN,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;MACpE,IAAMM,iBAAiB,GAAGP,QAAQ,CAACC,cAAc,CAAC,qBAAqB,CAAC;MACxE,IAAMO,oBAAoB,GAAGR,QAAQ,CAACC,cAAc,CAAC,wBAAwB,CAAC;MAE9EJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE;QACpCC,UAAU,EAAE,CAAC,CAACA,UAAU;QACxBG,SAAS,EAAE,CAAC,CAACA,SAAS;QACtBC,iBAAiB,EAAE,CAAC,CAACA,iBAAiB;QACtCC,aAAa,EAAE,CAAC,CAACA,aAAa;QAC9BC,YAAY,EAAE,CAAC,CAACA,YAAY;QAC5BC,cAAc,EAAE,CAAC,CAACA,cAAc;QAChCC,iBAAiB,EAAE,CAAC,CAACA;MACzB,CAAC,CAAC;MAEF,IAAI,CAACR,UAAU,IAAI,CAACG,SAAS,IAAI,CAACC,iBAAiB,IAAI,CAACG,cAAc,EAAE;QACpET,OAAO,CAACY,KAAK,CAAC,sCAAsC,CAAC;QACrD;MACJ;;MAEA;MACA,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,eAAe,GAAG,WAAW;MACjC,IAAIC,mBAAmB,GAAG,EAAE;;MAE5B;MACAC,mBAAmB,CAAC,CAAC;;MAErB;MACA,IAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MACxD,IAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAE1D,IAAIF,UAAU,EAAE;QACZV,aAAa,CAACc,KAAK,CAACC,KAAK,GAAGL,UAAU,GAAG,IAAI;MACjD;MACA,IAAIG,WAAW,EAAE;QACbd,iBAAiB,CAACe,KAAK,CAACE,MAAM,GAAGH,WAAW,GAAG,IAAI;MACvD;;MAEA;MACA,IAAII,UAAU,GAAG,KAAK;MACtB,IAAIC,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW;MAE3C,IAAIpB,YAAY,EAAE;QACdA,YAAY,CAACqB,gBAAgB,CAAC,WAAW,EAAE,UAAShH,CAAC,EAAE;UACnD2G,UAAU,GAAG,IAAI;UACjBjB,aAAa,CAACuB,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;UACvCN,MAAM,GAAG5G,CAAC,CAACmH,OAAO;UAClBN,MAAM,GAAG7G,CAAC,CAACoH,OAAO;UAClBN,UAAU,GAAGO,QAAQ,CAACC,MAAM,CAACC,gBAAgB,CAAC7B,aAAa,CAAC,CAACe,KAAK,EAAE,EAAE,CAAC;UACvEM,WAAW,GAAGM,QAAQ,CAACC,MAAM,CAACC,gBAAgB,CAAC9B,iBAAiB,CAAC,CAACiB,MAAM,EAAE,EAAE,CAAC;UAC7E1G,CAAC,CAACwH,cAAc,CAAC,CAAC;QACtB,CAAC,CAAC;MACN;MAEAlC,QAAQ,CAAC0B,gBAAgB,CAAC,WAAW,EAAE,UAAShH,CAAC,EAAE;QAC/C,IAAI,CAAC2G,UAAU,EAAE;UACb;QACJ;QACA,IAAMc,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEd,UAAU,IAAI9G,CAAC,CAACmH,OAAO,GAAGP,MAAM,CAAC,CAAC,CAAC;QAChF,IAAMiB,SAAS,GAAGH,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEb,WAAW,IAAI/G,CAAC,CAACoH,OAAO,GAAGP,MAAM,CAAC,CAAC,CAAC;QAClFnB,aAAa,CAACc,KAAK,CAACC,KAAK,GAAGgB,QAAQ,GAAG,IAAI;QAC3ChC,iBAAiB,CAACe,KAAK,CAACE,MAAM,GAAGmB,SAAS,GAAG,IAAI;QACjD;QACAxB,YAAY,CAACyB,OAAO,CAAC,eAAe,EAAEL,QAAQ,CAAC;QAC/CpB,YAAY,CAACyB,OAAO,CAAC,gBAAgB,EAAED,SAAS,CAAC;MACrD,CAAC,CAAC;MAEFvC,QAAQ,CAAC0B,gBAAgB,CAAC,SAAS,EAAE,YAAW;QAC5C,IAAIL,UAAU,EAAE;UACZA,UAAU,GAAG,KAAK;UAClBjB,aAAa,CAACuB,SAAS,CAACc,MAAM,CAAC,UAAU,CAAC;QAC9C;MACJ,CAAC,CAAC;;MAEF;AACR;AACA;MACQ,SAAS5B,mBAAmBA,CAAA,EAAG;QAC3BhB,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;QAE3EtF,IAAI,CAACmB,IAAI,CAAC,CAAC;UACP+G,UAAU,EAAE,iCAAiC;UAC7CC,IAAI,EAAE,CAAC,CAAC;UACRxF,IAAI,EAAE,SAANA,IAAIA,CAAWyF,MAAM,EAAE;YACnB/C,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE8C,MAAM,CAAC;YAE5D,IAAIA,MAAM,IAAIA,MAAM,CAACC,OAAO,EAAE;cAC1BnC,QAAQ,GAAGkC,MAAM;cACjB/C,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEY,QAAQ,CAAC;cACvDoC,eAAe,CAAC,CAAC;YACrB,CAAC,MAAM;cACHjD,OAAO,CAACY,KAAK,CAAC,kCAAkC,EAAEmC,MAAM,GAAGA,MAAM,CAACG,OAAO,GAAG,sBAAsB,CAAC;cACnGlD,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAEmC,MAAM,CAAC;cAC5ClC,QAAQ,GAAG;gBACPmC,OAAO,EAAE,KAAK;gBACdG,gBAAgB,EAAE,KAAK;gBACvBC,mBAAmB,EAAE,KAAK;gBAC1BC,aAAa,EAAE,EAAE;gBACjBC,oBAAoB,EAAE;cAC1B,CAAC;cACDC,sBAAsB,CAAC,gEAAgE,CAAC;YAC5F;UACJ,CAAC;UACDC,IAAI,EAAE,SAANA,IAAIA,CAAW5C,KAAK,EAAE;YAClBZ,OAAO,CAACY,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;YACzCZ,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAE;cAC5B3B,IAAI,EAAE2B,KAAK,CAAC3B,IAAI;cAChBiE,OAAO,EAAEtC,KAAK,CAACsC,OAAO;cACtBO,KAAK,EAAE7C,KAAK,CAAC6C;YACjB,CAAC,CAAC;YACF5C,QAAQ,GAAG;cACPmC,OAAO,EAAE,KAAK;cACdG,gBAAgB,EAAE,KAAK;cACvBC,mBAAmB,EAAE,KAAK;cAC1BC,aAAa,EAAE,EAAE;cACjBC,oBAAoB,EAAE;YAC1B,CAAC;YACDC,sBAAsB,CAAC,gDAAgD,CAAC;UAC5E;QACJ,CAAC,CAAC,CAAC;MACP;;MAEA;AACR;AACA;MACQ,SAASA,sBAAsBA,CAACL,OAAO,EAAE;QACrC,IAAMQ,QAAQ,GAAGvD,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;QAC9CD,QAAQ,CAACE,SAAS,GAAG,YAAY;QACjCF,QAAQ,CAACG,SAAS,gDAAAC,MAAA,CAAgDZ,OAAO,UAAO;QAChF5C,iBAAiB,CAACyD,WAAW,CAACL,QAAQ,CAAC;MAC3C;;MAEA;AACR;AACA;MACQ,SAAST,eAAeA,CAAA,EAAG;QACvBjD,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEY,QAAQ,CAAC;;QAErE;QACA,IAAI,CAACA,QAAQ,EAAE;UACXb,OAAO,CAACY,KAAK,CAAC,uDAAuD,CAAC;UACtE;QACJ;QAEAZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;UACvC+C,OAAO,EAAEnC,QAAQ,CAACmC,OAAO;UACzBG,gBAAgB,EAAEtC,QAAQ,CAACsC,gBAAgB;UAC3CC,mBAAmB,EAAEvC,QAAQ,CAACuC,mBAAmB;UACjDE,oBAAoB,EAAEzC,QAAQ,CAACyC,oBAAoB;UACnDD,aAAa,EAAExC,QAAQ,CAACwC;QAC5B,CAAC,CAAC;;QAEF;QACA5C,cAAc,CAACoD,SAAS,GAAG,EAAE;QAC7B,IAAInD,iBAAiB,EAAE;UACnBA,iBAAiB,CAACmD,SAAS,GAAG,EAAE;QACpC;QAEA,IAAIG,oBAAoB,GAAG,KAAK;;QAEhC;QACA,IAAInD,QAAQ,IAAIA,QAAQ,CAACuC,mBAAmB,EAAE;UAC1C,IAAMa,eAAe,GAAG9D,QAAQ,CAACwD,aAAa,CAAC,QAAQ,CAAC;UACxDM,eAAe,CAAC1G,KAAK,GAAG,WAAW;UACnC0G,eAAe,CAACC,WAAW,GAAG,cAAc;UAC5CzD,cAAc,CAACsD,WAAW,CAACE,eAAe,CAAC;UAC3CD,oBAAoB,GAAG,IAAI;QAC/B;QAEA,IAAInD,QAAQ,IAAIA,QAAQ,CAACsC,gBAAgB,EAAE;UACvC,IAAMgB,YAAY,GAAGhE,QAAQ,CAACwD,aAAa,CAAC,QAAQ,CAAC;UACrDQ,YAAY,CAAC5G,KAAK,GAAG,QAAQ;UAC7B4G,YAAY,CAACD,WAAW,GAAG,8CAA8C;UACzEC,YAAY,CAACC,QAAQ,GAAG,IAAI,CAAC,CAAC;UAC9BD,YAAY,CAAC9C,KAAK,CAACgD,KAAK,GAAG,MAAM,CAAC,CAAC;UACnC5D,cAAc,CAACsD,WAAW,CAACI,YAAY,CAAC;UACxC;;UAEA;UACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAEY;;QAEA;QACA,IAAI,CAACH,oBAAoB,EAAE;UACvB,IAAI,CAACnD,QAAQ,IAAI,CAACA,QAAQ,CAACuC,mBAAmB,EAAE;YAC5C,IAAMa,gBAAe,GAAG9D,QAAQ,CAACwD,aAAa,CAAC,QAAQ,CAAC;YACxDM,gBAAe,CAAC1G,KAAK,GAAG,WAAW;YACnC0G,gBAAe,CAACC,WAAW,GAAG,+BAA+B;YAC7DD,gBAAe,CAACG,QAAQ,GAAG,IAAI;YAC/B3D,cAAc,CAACsD,WAAW,CAACE,gBAAe,CAAC;UAC/C;UAEA,IAAI,CAACpD,QAAQ,IAAI,CAACA,QAAQ,CAACsC,gBAAgB,EAAE;YACzC,IAAMgB,aAAY,GAAGhE,QAAQ,CAACwD,aAAa,CAAC,QAAQ,CAAC;YACrDQ,aAAY,CAAC5G,KAAK,GAAG,QAAQ;YAC7B4G,aAAY,CAACD,WAAW,GAAG,6BAA6B;YACxDC,aAAY,CAACC,QAAQ,GAAG,IAAI;YAC5B3D,cAAc,CAACsD,WAAW,CAACI,aAAY,CAAC;UAC5C;UAEAZ,sBAAsB,CAAC,+DAA+D,CAAC;UACvF;QACJ;;QAEA;QACA,IAAMe,aAAa,GAAGpD,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;QAC9D,IAAMoD,gBAAgB,GAAGrD,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;QAErE,IAAImD,aAAa,IAAInE,QAAQ,CAACqE,aAAa,mBAAAV,MAAA,CAAkBQ,aAAa,QAAI,CAAC,EAAE;UAC7E7D,cAAc,CAAClD,KAAK,GAAG+G,aAAa;UACpCxD,eAAe,GAAGwD,aAAa;QACnC,CAAC,MAAM,IAAIzD,QAAQ,IAAIA,QAAQ,CAACuC,mBAAmB,EAAE;UACjDtC,eAAe,GAAG,WAAW;UAC7BL,cAAc,CAAClD,KAAK,GAAG,WAAW;QACtC,CAAC,MAAM,IAAIsD,QAAQ,IAAIA,QAAQ,CAACsC,gBAAgB,EAAE;UAC9CrC,eAAe,GAAG,QAAQ;UAC1BL,cAAc,CAAClD,KAAK,GAAG,QAAQ;QACnC;QAEA,IAAIgH,gBAAgB,IAAI7D,iBAAiB,IAAIP,QAAQ,CAACqE,aAAa,wCAAAV,MAAA,CAAuCS,gBAAgB,QAAI,CAAC,EAAE;UAC7H7D,iBAAiB,CAACnD,KAAK,GAAGgH,gBAAgB;UAC1CxD,mBAAmB,GAAGwD,gBAAgB;QAC1C;;QAEA;QACAE,2BAA2B,CAAC,CAAC;MACjC;;MAEA;AACR;AACA;MACQ,SAASA,2BAA2BA,CAAA,EAAG;QAAA,IAAAC,SAAA;QACnC,IAAI/D,oBAAoB,IAAIG,eAAe,KAAK,QAAQ,KAAA4D,SAAA,GAAI7D,QAAQ,cAAA6D,SAAA,eAARA,SAAA,CAAUvB,gBAAgB,EAAE;UACpFxC,oBAAoB,CAACU,KAAK,CAACsD,OAAO,GAAG,MAAM;QAC/C,CAAC,MAAM,IAAIhE,oBAAoB,EAAE;UAC7BA,oBAAoB,CAACU,KAAK,CAACsD,OAAO,GAAG,MAAM;QAC/C;MACJ;;MAEA;MACA,IAAIlE,cAAc,EAAE;QAChBA,cAAc,CAACoB,gBAAgB,CAAC,QAAQ,EAAE,YAAW;UACjDf,eAAe,GAAG,IAAI,CAACvD,KAAK;UAC5B2D,YAAY,CAACyB,OAAO,CAAC,kBAAkB,EAAE7B,eAAe,CAAC;UACzD2D,2BAA2B,CAAC,CAAC;;UAE7B;UACAnE,iBAAiB,CAACuD,SAAS,oIAAAC,MAAA,CAEmChD,eAAe,KAAK,QAAQ,GAAG,YAAY,GAAG,cAAc,8EAEzH;QACL,CAAC,CAAC;MACN;;MAEA;MACA,IAAIJ,iBAAiB,EAAE;QACnBA,iBAAiB,CAACmB,gBAAgB,CAAC,QAAQ,EAAE,YAAW;UACpDd,mBAAmB,GAAG,IAAI,CAACxD,KAAK;UAChC2D,YAAY,CAACyB,OAAO,CAAC,sBAAsB,EAAE5B,mBAAmB,CAAC;QACrE,CAAC,CAAC;MACN;;MAEA;AACR;AACA;MACQ,SAAS6D,WAAWA,CAAA,EAAG;QACnB,IAAM1B,OAAO,GAAG7C,SAAS,CAAC9C,KAAK,CAACsH,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC3B,OAAO,EAAE;UACV;QACJ;;QAEA;QACA,IAAI,CAACrC,QAAQ,IAAK,CAACA,QAAQ,CAACuC,mBAAmB,IAAI,CAACvC,QAAQ,CAACsC,gBAAiB,EAAE;UAC5EI,sBAAsB,CAAC,+DAA+D,CAAC;UACvF;QACJ;;QAEA;QACA,IAAMuB,cAAc,GAAG3E,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;QACpDmB,cAAc,CAAClB,SAAS,GAAG,cAAc;QACzCkB,cAAc,CAACjB,SAAS,GAAG,wBAAwB,GAAGX,OAAO;QAC7D5C,iBAAiB,CAACyD,WAAW,CAACe,cAAc,CAAC;;QAE7C;QACAzE,SAAS,CAAC9C,KAAK,GAAG,EAAE;;QAEpB;QACA,IAAMwH,UAAU,GAAG5E,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;QAChDoB,UAAU,CAACnB,SAAS,GAAG,YAAY;QACnCmB,UAAU,CAAClB,SAAS,sEAAAC,MAAA,CAAsEhD,eAAe,aAAU;QACnHR,iBAAiB,CAACyD,WAAW,CAACgB,UAAU,CAAC;;QAEzC;QACApK,IAAI,CAACmB,IAAI,CAAC,CAAC;UACP+G,UAAU,EAAE,wCAAwC;UACpDC,IAAI,EAAE;YAAEkC,QAAQ,EAAElE;UAAgB,CAAC;UACnCxD,IAAI,EAAE,SAANA,IAAIA,CAAW2H,WAAW,EAAE;YACxB;YACA3E,iBAAiB,CAAC4E,WAAW,CAACH,UAAU,CAAC;YAEzC,IAAIE,WAAW,CAACjC,OAAO,EAAE;cACrB;cACA,IAAIlC,eAAe,KAAK,QAAQ,EAAE;gBAC9BqE,qBAAqB,CAACjC,OAAO,EAAE+B,WAAW,CAACG,OAAO,CAAC;cACvD,CAAC,MAAM;gBACHC,wBAAwB,CAACnC,OAAO,EAAE+B,WAAW,CAACG,OAAO,CAAC;cAC1D;YACJ,CAAC,MAAM;cACH,IAAM1B,QAAQ,GAAGvD,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;cAC9CD,QAAQ,CAACE,SAAS,GAAG,YAAY;cACjCF,QAAQ,CAACG,SAAS,GAAG,4CAA4C,GAAGoB,WAAW,CAAC/B,OAAO,GAAG,OAAO;cACjG5C,iBAAiB,CAACyD,WAAW,CAACL,QAAQ,CAAC;YAC3C;UACJ,CAAC;UACDF,IAAI,EAAE,SAANA,IAAIA,CAAW5C,KAAK,EAAE;YAClB;YACA,IAAIN,iBAAiB,CAACgF,QAAQ,CAACP,UAAU,CAAC,EAAE;cACxCzE,iBAAiB,CAAC4E,WAAW,CAACH,UAAU,CAAC;YAC7C;YAEA,IAAMrB,QAAQ,GAAGvD,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;YAC9CD,QAAQ,CAACE,SAAS,GAAG,YAAY;YACjCF,QAAQ,CAACG,SAAS,GAAG,gEAAgE,IAChFjD,KAAK,CAACsC,OAAO,IAAI,eAAe,CAAC,GAAG,OAAO;YAChD5C,iBAAiB,CAACyD,WAAW,CAACL,QAAQ,CAAC;UAC3C;QACJ,CAAC,CAAC,CAAC;;QAEH;QACApD,iBAAiB,CAACiF,SAAS,GAAGjF,iBAAiB,CAACkF,YAAY;MAChE;;MAEA;AACR;AACA;AACA;AACA;MAJQ,SAKeH,wBAAwBA,CAAAI,EAAA,EAAAC,GAAA;QAAA,OAAAC,yBAAA,CAAAjG,KAAA,OAAAD,SAAA;MAAA;MA6HvC;AACR;AACA;AACA;AACA;MAJQ,SAAAkG,0BAAA;QAAAA,yBAAA,GAAAnG,iBAAA,cAAAtD,YAAA,GAAA6B,CAAA,CA7HA,SAAA6H,SAAwC1C,OAAO,EAAE2C,MAAM;UAAA,OAAA3J,YAAA,GAAA4B,CAAA,WAAAgI,SAAA;YAAA,kBAAAA,SAAA,CAAA7K,CAAA;cAAA;gBACnD8K,UAAU,cAAAvG,iBAAA,cAAAtD,YAAA,GAAA6B,CAAA,CAAC,SAAAiI,QAAA;kBAAA,IAAAC,YAAA,EAAAC,YAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,eAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAArJ,IAAA,EAAAC,KAAA,EAAAqJ,KAAA,EAAAC,KAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;kBAAA,OAAArL,YAAA,GAAA4B,CAAA,WAAA0J,QAAA;oBAAA,kBAAAA,QAAA,CAAA5K,CAAA,GAAA4K,QAAA,CAAAvM,CAAA;sBAAA;wBACDgL,YAAY,GAAG9F,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;wBAClDsC,YAAY,CAACrC,SAAS,GAAG,YAAY;wBACrCqC,YAAY,CAACpC,SAAS,GAAG,gFAAgF;wBACzGvD,iBAAiB,CAACyD,WAAW,CAACkC,YAAY,CAAC;wBACrCC,YAAY,GAAGD,YAAY,CAACzB,aAAa,CAAC,gBAAgB,CAAC;wBAE3D2B,GAAG,GAAG,wDAAwD;wBAC9DC,OAAO,GAAG;0BACZqB,MAAM,EAAE,MAAM;0BACdC,OAAO,EAAE;4BACL,eAAe,EAAE,SAAS,GAAG7B,MAAM;4BACnC,cAAc,EAAE;0BACpB,CAAC;0BACD8B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;4BACjB,OAAO,EAAE,kDAAkD;4BAC3D,UAAU,EAAE,CACR;8BACI,MAAM,EAAE,MAAM;8BACd,SAAS,EAAE3E;4BACf,CAAC,CACJ;4BACD,YAAY,EAAE,IAAI;4BAClB,qBAAqB,EAAE,IAAI;4BAC3B,aAAa,EAAE,GAAG;4BAClB,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,EAAE;4BACX,mBAAmB,EAAE,CAAC;4BACtB,0BAA0B,EAAE,KAAK;4BACjC,kBAAkB,EAAE,CAAC;4BACrB,oBAAoB,EAAE,CAAC;4BACvB,aAAa,EAAE,GAAG;4BAClB,iBAAiB,EAAE,GAAG;4BACtB,GAAG,EAAE,CAAC;4BACN,YAAY,EAAE,KAAK;4BACnB,iBAAiB,EAAE,IAAI;4BACvB,QAAQ,EAAE,IAAI;4BACd,kCAAkC,EAAE;0BACxC,CAAC;wBACL,CAAC;wBAAAsE,QAAA,CAAA5K,CAAA;wBAAA4K,QAAA,CAAAvM,CAAA;wBAAA,OAG0B6M,KAAK,CAAC3B,GAAG,EAAEC,OAAO,CAAC;sBAAA;wBAApCC,QAAQ,GAAAmB,QAAA,CAAAzK,CAAA;wBAAA,IAETsJ,QAAQ,CAAC0B,EAAE;0BAAAP,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAAuM,QAAA,CAAAvM,CAAA;wBAAA,OACYoL,QAAQ,CAAC2B,IAAI,CAAC,CAAC;sBAAA;wBAAjC1B,SAAS,GAAAkB,QAAA,CAAAzK,CAAA;wBACfiD,OAAO,CAACY,KAAK,CAAC,+BAA+B,EAAE0F,SAAS,CAAC;wBAAC,MACpD,IAAI2B,KAAK,SAAAnE,MAAA,CAASuC,QAAQ,CAAC6B,MAAM,QAAApE,MAAA,CAAKuC,QAAQ,CAAC8B,UAAU,CAAE,CAAC;sBAAA;wBAGhE5B,MAAM,GAAGF,QAAQ,CAACsB,IAAI,CAACS,SAAS,CAAC,CAAC;wBAClC5B,OAAO,GAAG,IAAI6B,WAAW,CAAC,CAAC;wBAC7B5B,eAAe,GAAG,EAAE;wBACpBC,kBAAkB,GAAG,KAAK;wBAAAc,QAAA,CAAA5K,CAAA;sBAAA;wBAAA,KAGnB,IAAI;0BAAA4K,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAAuM,QAAA,CAAAvM,CAAA;wBAAA,OACuBsL,MAAM,CAAC+B,IAAI,CAAC,CAAC;sBAAA;wBAAA3B,kBAAA,GAAAa,QAAA,CAAAzK,CAAA;wBAAnCO,IAAI,GAAAqJ,kBAAA,CAAJrJ,IAAI;wBAAEC,KAAK,GAAAoJ,kBAAA,CAALpJ,KAAK;wBAAA,KAEfD,IAAI;0BAAAkK,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAA,OAAAuM,QAAA,CAAAxK,CAAA;sBAAA;wBAIF4J,KAAK,GAAGJ,OAAO,CAAC+B,MAAM,CAAChL,KAAK,CAAC;wBAC7BsJ,KAAK,GAAGD,KAAK,CAAC4B,KAAK,CAAC,IAAI,CAAC;wBAAA1B,SAAA,GAAAzI,0BAAA,CAEZwI,KAAK;wBAAAW,QAAA,CAAA5K,CAAA;wBAAAkK,SAAA,CAAAnI,CAAA;sBAAA;wBAAA,KAAAoI,KAAA,GAAAD,SAAA,CAAA7L,CAAA,IAAAqC,IAAA;0BAAAkK,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAb+L,IAAI,GAAAD,KAAA,CAAAxJ,KAAA;wBAAA,KACPyJ,IAAI,CAACyB,UAAU,CAAC,QAAQ,CAAC;0BAAAjB,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBACnBgM,IAAI,GAAGD,IAAI,CAACjI,KAAK,CAAC,CAAC,CAAC;wBAAA,MAEtBkI,IAAI,KAAK,QAAQ;0BAAAO,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAA,OAAAuM,QAAA,CAAAxK,CAAA;sBAAA;wBAAAwK,QAAA,CAAA5K,CAAA;wBAKXsK,MAAM,GAAGU,IAAI,CAACc,KAAK,CAACzB,IAAI,CAAC;wBAAA,KAE3BC,MAAM,CAACtG,KAAK;0BAAA4G,QAAA,CAAAvM,CAAA;0BAAA;wBAAA;wBAAA,MACN,IAAIgN,KAAK,CAACf,MAAM,CAACtG,KAAK,CAACsC,OAAO,IAAI,WAAW,CAAC;sBAAA;wBAGxD,IAAIgE,MAAM,CAACyB,OAAO,IAAIzB,MAAM,CAACyB,OAAO,CAAC,CAAC,CAAC,IAAIzB,MAAM,CAACyB,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE;0BAC1DzB,OAAO,GAAGD,MAAM,CAACyB,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAACzB,OAAO,IAAI,EAAE;0BACrD,IAAIA,OAAO,EAAE;4BACTV,eAAe,IAAIU,OAAO;4BAC1BT,kBAAkB,GAAG,IAAI;;4BAEzB;4BACA,IAAI,OAAOmC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACH,KAAK,EAAE;8BACzCtB,WAAW,GAAGyB,MAAM,CAACH,KAAK,CAACjC,eAAe,CAAC;8BACjDP,YAAY,CAACrC,SAAS,GAAGuD,WAAW;4BACxC,CAAC,MAAM;8BACHlB,YAAY,CAAChC,WAAW,GAAGuC,eAAe;4BAC9C;;4BAEA;4BACAnG,iBAAiB,CAACiF,SAAS,GAAGjF,iBAAiB,CAACkF,YAAY;0BAChE;wBACJ;wBAACgC,QAAA,CAAAvM,CAAA;wBAAA;sBAAA;wBAAAuM,QAAA,CAAA5K,CAAA;wBAAAyK,EAAA,GAAAG,QAAA,CAAAzK,CAAA;wBAEDiD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEgH,IAAI,CAAC;sBAAC;wBAAAO,QAAA,CAAAvM,CAAA;wBAAA;sBAAA;wBAAAuM,QAAA,CAAAvM,CAAA;wBAAA;sBAAA;wBAAAuM,QAAA,CAAA5K,CAAA;wBAAA0K,GAAA,GAAAE,QAAA,CAAAzK,CAAA;wBAAA+J,SAAA,CAAAjM,CAAA,CAAAyM,GAAA;sBAAA;wBAAAE,QAAA,CAAA5K,CAAA;wBAAAkK,SAAA,CAAAzL,CAAA;wBAAA,OAAAmM,QAAA,CAAAnM,CAAA;sBAAA;wBAAAmM,QAAA,CAAAvM,CAAA;wBAAA;sBAAA;wBAAAuM,QAAA,CAAA5K,CAAA;wBAM1D2J,MAAM,CAACuC,WAAW,CAAC,CAAC;wBAAC,OAAAtB,QAAA,CAAAnM,CAAA;sBAAA;wBAGzB;wBACA,IAAI,CAACqL,kBAAkB,EAAE;0BACrBR,YAAY,CAAChC,WAAW,GAAG,0CAA0C;wBACzE;wBAACsD,QAAA,CAAAvM,CAAA;wBAAA;sBAAA;wBAAAuM,QAAA,CAAA5K,CAAA;wBAAA2K,GAAA,GAAAC,QAAA,CAAAzK,CAAA;wBAGDiD,OAAO,CAACY,KAAK,CAAC,4BAA4B,EAAA2G,GAAO,CAAC;wBAClDrB,YAAY,CAAChC,WAAW,GAAG,qDAAqD,GAAGqD,GAAA,CAAMrE,OAAO;sBAAC;wBAGrG;wBACA5C,iBAAiB,CAACiF,SAAS,GAAGjF,iBAAiB,CAACkF,YAAY;sBAAC;wBAAA,OAAAgC,QAAA,CAAAxK,CAAA;oBAAA;kBAAA,GAAAgJ,OAAA;gBAAA,CAChE,IAAE,IAAI,CAAC;cAAC;gBAAA,OAAAF,SAAA,CAAA9I,CAAA;YAAA;UAAA,GAAA4I,QAAA;QAAA,CACZ;QAAA,OAAAD,yBAAA,CAAAjG,KAAA,OAAAD,SAAA;MAAA;MAAA,SAOc0F,qBAAqBA,CAAA4D,GAAA,EAAAC,GAAA;QAAA,OAAAC,sBAAA,CAAAvJ,KAAA,OAAAD,SAAA;MAAA;MAAA,SAAAwJ,uBAAA;QAAAA,sBAAA,GAAAzJ,iBAAA,cAAAtD,YAAA,GAAA6B,CAAA,CAApC,SAAAmL,SAAqChG,OAAO,EAAE2C,MAAM;UAAA,OAAA3J,YAAA,GAAA4B,CAAA,WAAAqL,SAAA;YAAA,kBAAAA,SAAA,CAAAlO,CAAA;cAAA;gBAChD8K,UAAU,cAAAvG,iBAAA,cAAAtD,YAAA,GAAA6B,CAAA,CAAC,SAAAqL,SAAA;kBAAA,IAAAnD,YAAA,EAAAC,YAAA,EAAAmD,UAAA,EAAAlD,GAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,eAAA,EAAAC,kBAAA,EAAA4C,mBAAA,EAAAhM,IAAA,EAAAC,KAAA,EAAAqJ,KAAA,EAAAC,KAAA,EAAA0C,UAAA,EAAAC,MAAA,EAAAxC,IAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAqC,GAAA,EAAAC,GAAA,EAAAC,GAAA;kBAAA,OAAAzN,YAAA,GAAA4B,CAAA,WAAA8L,SAAA;oBAAA,kBAAAA,SAAA,CAAAhN,CAAA,GAAAgN,SAAA,CAAA3O,CAAA;sBAAA;wBACDgL,YAAY,GAAG9F,QAAQ,CAACwD,aAAa,CAAC,KAAK,CAAC;wBAClDsC,YAAY,CAACrC,SAAS,GAAG,YAAY;wBACrCqC,YAAY,CAACpC,SAAS,gFAAgF;wBACtGvD,iBAAiB,CAACyD,WAAW,CAACkC,YAAY,CAAC;wBACrCC,YAAY,GAAGD,YAAY,CAACzB,aAAa,CAAC,gBAAgB,CAAC,EAEjE;wBACI6E,UAAU,GAAGtI,mBAAmB;wBACpC,IAAI,CAACsI,UAAU,IAAIxI,QAAQ,IAAIA,QAAQ,CAACyC,oBAAoB,EAAE;0BAC1D+F,UAAU,GAAGxI,QAAQ,CAACyC,oBAAoB;wBAC9C;wBACA,IAAI,CAAC+F,UAAU,EAAE;0BACbA,UAAU,GAAG,0BAA0B,CAAC,CAAC;wBAC7C;wBAEMlD,GAAG,GAAG,uCAAuC;wBAC7CC,OAAO,GAAG;0BACZqB,MAAM,EAAE,MAAM;0BACdC,OAAO,EAAE;4BACL,WAAW,EAAE7B,MAAM;4BACnB,cAAc,EAAE,kBAAkB;4BAClC,mBAAmB,EAAE;0BACzB,CAAC;0BACD8B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;4BACjBgC,KAAK,EAAER,UAAU;4BACjBS,UAAU,EAAE,IAAI;4BAChBC,QAAQ,EAAE,CACN;8BACIC,IAAI,EAAE,MAAM;8BACZ7C,OAAO,EAAEjE;4BACb,CAAC,CACJ;4BACD+G,MAAM,EAAE;0BACZ,CAAC;wBACL,CAAC;wBAAAL,SAAA,CAAAhN,CAAA;wBAAAgN,SAAA,CAAA3O,CAAA;wBAAA,OAG0B6M,KAAK,CAAC3B,GAAG,EAAEC,OAAO,CAAC;sBAAA;wBAApCC,QAAQ,GAAAuD,SAAA,CAAA7M,CAAA;wBAAA,IAETsJ,QAAQ,CAAC0B,EAAE;0BAAA6B,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBAAA2O,SAAA,CAAA3O,CAAA;wBAAA,OACYoL,QAAQ,CAAC2B,IAAI,CAAC,CAAC;sBAAA;wBAAjC1B,SAAS,GAAAsD,SAAA,CAAA7M,CAAA;wBACfiD,OAAO,CAACY,KAAK,CAAC,4BAA4B,EAAE0F,SAAS,CAAC;wBAAC,MACjD,IAAI2B,KAAK,SAAAnE,MAAA,CAASuC,QAAQ,CAAC6B,MAAM,QAAApE,MAAA,CAAKuC,QAAQ,CAAC8B,UAAU,CAAE,CAAC;sBAAA;wBAGhE5B,MAAM,GAAGF,QAAQ,CAACsB,IAAI,CAACS,SAAS,CAAC,CAAC;wBAClC5B,OAAO,GAAG,IAAI6B,WAAW,CAAC,CAAC;wBAC7B5B,eAAe,GAAG,EAAE;wBACpBC,kBAAkB,GAAG,KAAK;wBAAAkD,SAAA,CAAAhN,CAAA;sBAAA;wBAAA,KAGnB,IAAI;0BAAAgN,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBAAA2O,SAAA,CAAA3O,CAAA;wBAAA,OACuBsL,MAAM,CAAC+B,IAAI,CAAC,CAAC;sBAAA;wBAAAgB,mBAAA,GAAAM,SAAA,CAAA7M,CAAA;wBAAnCO,IAAI,GAAAgM,mBAAA,CAAJhM,IAAI;wBAAEC,KAAK,GAAA+L,mBAAA,CAAL/L,KAAK;wBAAA,KAEfD,IAAI;0BAAAsM,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBAAA,OAAA2O,SAAA,CAAA5M,CAAA;sBAAA;wBAIF4J,KAAK,GAAGJ,OAAO,CAAC+B,MAAM,CAAChL,KAAK,CAAC;wBAC7BsJ,KAAK,GAAGD,KAAK,CAAC4B,KAAK,CAAC,IAAI,CAAC;wBAAAe,UAAA,GAAAlL,0BAAA,CAEZwI,KAAK;wBAAA+C,SAAA,CAAAhN,CAAA;wBAAA2M,UAAA,CAAA5K,CAAA;sBAAA;wBAAA,KAAA6K,MAAA,GAAAD,UAAA,CAAAtO,CAAA,IAAAqC,IAAA;0BAAAsM,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBAAb+L,IAAI,GAAAwC,MAAA,CAAAjM,KAAA;wBAAA,KACPyJ,IAAI,CAACyB,UAAU,CAAC,QAAQ,CAAC;0BAAAmB,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBACnBgM,IAAI,GAAGD,IAAI,CAACjI,KAAK,CAAC,CAAC,CAAC;wBAAA,MAEtBkI,IAAI,KAAK,QAAQ;0BAAA2C,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBAAA,OAAA2O,SAAA,CAAA5M,CAAA;sBAAA;wBAAA4M,SAAA,CAAAhN,CAAA;wBAKXsK,MAAM,GAAGU,IAAI,CAACc,KAAK,CAACzB,IAAI,CAAC;wBAAA,MAE3BC,MAAM,CAACgD,IAAI,KAAK,OAAO;0BAAAN,SAAA,CAAA3O,CAAA;0BAAA;wBAAA;wBACvB+E,OAAO,CAACY,KAAK,CAAC,mBAAmB,EAAEsG,MAAM,CAACtG,KAAK,CAAC;wBAAC,MAC3C,IAAIqH,KAAK,CAACf,MAAM,CAACtG,KAAK,CAACsC,OAAO,IAAI,kBAAkB,CAAC;sBAAA;wBAG/D,IAAIgE,MAAM,CAACgD,IAAI,KAAK,qBAAqB,IAAIhD,MAAM,CAAC0B,KAAK,IAAI1B,MAAM,CAAC0B,KAAK,CAACZ,IAAI,EAAE;0BACtEb,OAAO,GAAGD,MAAM,CAAC0B,KAAK,CAACZ,IAAI;0BACjCvB,eAAe,IAAIU,OAAO;0BAC1BT,kBAAkB,GAAG,IAAI;;0BAEzB;0BACA,IAAI,OAAOmC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACH,KAAK,EAAE;4BACzCtB,WAAW,GAAGyB,MAAM,CAACH,KAAK,CAACjC,eAAe,CAAC;4BACjDP,YAAY,CAACrC,SAAS,GAAGuD,WAAW;0BACxC,CAAC,MAAM;4BACHlB,YAAY,CAAChC,WAAW,GAAGuC,eAAe;0BAC9C;;0BAEA;0BACAnG,iBAAiB,CAACiF,SAAS,GAAGjF,iBAAiB,CAACkF,YAAY;wBAChE;wBAACoE,SAAA,CAAA3O,CAAA;wBAAA;sBAAA;wBAAA2O,SAAA,CAAAhN,CAAA;wBAAA6M,GAAA,GAAAG,SAAA,CAAA7M,CAAA;wBAEDiD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEgH,IAAI,CAAC;sBAAC;wBAAA2C,SAAA,CAAA3O,CAAA;wBAAA;sBAAA;wBAAA2O,SAAA,CAAA3O,CAAA;wBAAA;sBAAA;wBAAA2O,SAAA,CAAAhN,CAAA;wBAAA8M,GAAA,GAAAE,SAAA,CAAA7M,CAAA;wBAAAwM,UAAA,CAAA1O,CAAA,CAAA6O,GAAA;sBAAA;wBAAAE,SAAA,CAAAhN,CAAA;wBAAA2M,UAAA,CAAAlO,CAAA;wBAAA,OAAAuO,SAAA,CAAAvO,CAAA;sBAAA;wBAAAuO,SAAA,CAAA3O,CAAA;wBAAA;sBAAA;wBAAA2O,SAAA,CAAAhN,CAAA;wBAM1D2J,MAAM,CAACuC,WAAW,CAAC,CAAC;wBAAC,OAAAc,SAAA,CAAAvO,CAAA;sBAAA;wBAGzB;wBACA,IAAI,CAACqL,kBAAkB,EAAE;0BACrBR,YAAY,CAAChC,WAAW,GAAG,uCAAuC;wBACtE;wBAAC0F,SAAA,CAAA3O,CAAA;wBAAA;sBAAA;wBAAA2O,SAAA,CAAAhN,CAAA;wBAAA+M,GAAA,GAAAC,SAAA,CAAA7M,CAAA;wBAGDiD,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAA+I,GAAO,CAAC;wBAC/CzD,YAAY,CAAChC,WAAW,GAAG,qDAAqD,GAAGyF,GAAA,CAAMzG,OAAO;sBAAC;wBAGrG;wBACA5C,iBAAiB,CAACiF,SAAS,GAAGjF,iBAAiB,CAACkF,YAAY;sBAAC;wBAAA,OAAAoE,SAAA,CAAA5M,CAAA;oBAAA;kBAAA,GAAAoM,QAAA;gBAAA,CAChE,IAAE,IAAI,CAAC;cAAC;gBAAA,OAAAD,SAAA,CAAAnM,CAAA;YAAA;UAAA,GAAAkM,QAAA;QAAA,CACZ;QAAA,OAAAD,sBAAA,CAAAvJ,KAAA,OAAAD,SAAA;MAAA;MAEDS,UAAU,CAAC2B,gBAAgB,CAAC,OAAO,EAAE+C,WAAW,CAAC;MAEjDvE,SAAS,CAACwB,gBAAgB,CAAC,UAAU,EAAE,UAAShH,CAAC,EAAE;QAC/C,IAAIA,CAAC,CAACsP,GAAG,KAAK,OAAO,IAAI,CAACtP,CAAC,CAACuP,QAAQ,EAAE;UAClCvP,CAAC,CAACwH,cAAc,CAAC,CAAC;UAClBuC,WAAW,CAAC,CAAC;QACjB;MACJ,CAAC,CAAC;IACN,CAAC;;IAED;IACA,IAAIzE,QAAQ,CAACkK,UAAU,KAAK,SAAS,EAAE;MACnClK,QAAQ,CAAC0B,gBAAgB,CAAC,kBAAkB,EAAE9B,cAAc,CAAC;IACjE,CAAC,MAAM;MACH;MACAA,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC;AAAC","ignoreList":[]}
>>>>>>> 6f54ee7f13a502861e2a95c053acd30dd6a07fa3
