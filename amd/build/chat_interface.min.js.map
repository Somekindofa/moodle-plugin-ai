{"version":3,"file":"chat_interface.min.js","names":["Ajax","_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","_typeof","has","get","set","_t4","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_regenerator","Symbol","iterator","toStringTag","c","prototype","Generator","u","create","_regeneratorDefine2","p","y","G","v","a","d","bind","length","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","displayName","w","m","_regeneratorDefine","_invoke","enumerable","configurable","writable","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","init","_exports","initializeChat","console","log","sendButton","document","getElementById","chatInput","messagesContainer","chatContainer","resizeHandle","providerSelect","claudeModelSelect","claudeModelSelection","error","aiConfig","currentProvider","selectedClaudeModel","loadAIConfiguration","methodname","args","config","success","setupProviderUI","message","claude_available","fireworks_available","claude_models","default_claude_model","showConfigurationError","fail","stack","errorDiv","createElement","className","innerHTML","concat","appendChild","hasAvailableProvider","fireworksOption","textContent","claudeOption","disabled","style","color","savedProvider","localStorage","getItem","savedClaudeModel","querySelector","updateClaudeModelVisibility","_aiConfig","display","addEventListener","setItem","sendMessage","trim","userMessageDiv","loadingDiv","provider","credentials","removeChild","sendClaudeChatMessage","api_key","sendFireworksChatMessage","contains","scrollTop","scrollHeight","_x","_x2","_sendFireworksChatMessage","_callee2","apiKey","_context2","setTimeout","_callee","aiMessageDiv","responseSpan","url","options","response","reader","decoder","_yield$reader$read","lines","_iterator","_step","line","data","htmlContent","_t","_t2","_t3","_context","method","headers","body","JSON","stringify","fetch","ok","Error","status","statusText","getReader","TextDecoder","read","decode","stream","split","debug","parse","content","marked","key","shiftKey","preventDefault","readyState"],"sources":["../src/chat_interface.js"],"sourcesContent":["// Standard license block omitted for brevity\r\n/**\r\n * @module     block_aiassistant/chat_interface\r\n * @copyright  2025 Your Name\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Ajax from 'core/ajax';\r\n\r\n/**\r\n * Initialize the AI chat interface\r\n */\r\nexport const init = () => {\r\n    // Function to initialize the chat interface\r\n    const initializeChat = () => {\r\n        console.log('AI Chat: Initializing...');\r\n        \r\n        const sendButton = document.getElementById(\"ai-chat-send\");\r\n        const chatInput = document.getElementById(\"ai-chat-input\");\r\n        const messagesContainer = document.getElementById(\"ai-chat-messages\");\r\n        const chatContainer = document.getElementById(\"ai-chat-container\");\r\n        const resizeHandle = document.getElementById(\"ai-resize-handle\");\r\n        const providerSelect = document.getElementById(\"ai-provider-select\");\r\n        const claudeModelSelect = document.getElementById(\"claude-model-select\");\r\n        const claudeModelSelection = document.getElementById(\"claude-model-selection\");\r\n\r\n        console.log('AI Chat: Elements found:', {\r\n            sendButton: !!sendButton,\r\n            chatInput: !!chatInput,\r\n            messagesContainer: !!messagesContainer,\r\n            chatContainer: !!chatContainer,\r\n            resizeHandle: !!resizeHandle,\r\n            providerSelect: !!providerSelect,\r\n            claudeModelSelect: !!claudeModelSelect\r\n        });\r\n\r\n        if (!sendButton || !chatInput || !messagesContainer || !providerSelect) {\r\n            console.error('AI Chat: Required elements not found');\r\n            return;\r\n        }\r\n\r\n        // Global configuration storage\r\n        let aiConfig = null;\r\n        let currentProvider = 'fireworks';\r\n        let selectedClaudeModel = '';\r\n\r\n        // Load AI configuration on startup\r\n        loadAIConfiguration();\r\n\r\n        /**\r\n         * Load AI configuration from backend\r\n         */\r\n        function loadAIConfiguration() {\r\n            console.log('DEBUG: Starting AJAX call to block_aiassistant_get_ai_config');\r\n            \r\n            Ajax.call([{\r\n                methodname: 'block_aiassistant_get_ai_config',\r\n                args: {},\r\n                done: function(config) {\r\n                    console.log('DEBUG: AJAX success, config received:', config);\r\n                    \r\n                    if (config && config.success) {\r\n                        aiConfig = config;\r\n                        console.log('AI Config loaded successfully:', aiConfig);\r\n                        setupProviderUI();\r\n                    } else {\r\n                        console.error('Failed to load AI configuration:', config ? config.message : 'No response received');\r\n                        console.error('Full config object:', config);\r\n                        aiConfig = {\r\n                            success: false,\r\n                            claude_available: false,\r\n                            fireworks_available: false,\r\n                            claude_models: [],\r\n                            default_claude_model: ''\r\n                        };\r\n                        showConfigurationError('Failed to load AI configuration. Please check plugin settings.');\r\n                    }\r\n                },\r\n                fail: function(error) {\r\n                    console.error('AJAX call failed:', error);\r\n                    console.error('Error details:', {\r\n                        name: error.name,\r\n                        message: error.message,\r\n                        stack: error.stack\r\n                    });\r\n                    aiConfig = {\r\n                        success: false,\r\n                        claude_available: false,\r\n                        fireworks_available: false,\r\n                        claude_models: [],\r\n                        default_claude_model: ''\r\n                    };\r\n                    showConfigurationError('Could not connect to AI configuration service.');\r\n                }\r\n            }]);\r\n        }\r\n\r\n        /**\r\n         * Show configuration error in chat\r\n         */\r\n        function showConfigurationError(message) {\r\n            const errorDiv = document.createElement(\"div\");\r\n            errorDiv.className = \"ai-message\";\r\n            errorDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Error: ${message}</em>`;\r\n            messagesContainer.appendChild(errorDiv);\r\n        }\r\n\r\n        /**\r\n         * Setup provider UI based on configuration\r\n         */\r\n        function setupProviderUI() {\r\n            console.log('DEBUG: setupProviderUI called with aiConfig:', aiConfig);\r\n            \r\n            // Ensure aiConfig exists before proceeding\r\n            if (!aiConfig) {\r\n                console.error('AI configuration not loaded, cannot setup provider UI');\r\n                return;\r\n            }\r\n\r\n            console.log('DEBUG: aiConfig properties:', {\r\n                success: aiConfig.success,\r\n                claude_available: aiConfig.claude_available,\r\n                fireworks_available: aiConfig.fireworks_available,\r\n                default_claude_model: aiConfig.default_claude_model,\r\n                claude_models: aiConfig.claude_models\r\n            });\r\n\r\n            // Clear existing options\r\n            providerSelect.innerHTML = '';\r\n            if (claudeModelSelect) {\r\n                claudeModelSelect.innerHTML = '';\r\n            }\r\n\r\n            let hasAvailableProvider = false;\r\n\r\n            // Add available providers\r\n            if (aiConfig && aiConfig.fireworks_available) {\r\n                const fireworksOption = document.createElement('option');\r\n                fireworksOption.value = 'fireworks';\r\n                fireworksOption.textContent = 'Fireworks.ai';\r\n                providerSelect.appendChild(fireworksOption);\r\n                hasAvailableProvider = true;\r\n            }\r\n\r\n            if (aiConfig && aiConfig.claude_available) {\r\n                const claudeOption = document.createElement('option');\r\n                claudeOption.value = 'claude';\r\n                claudeOption.textContent = 'Claude API (Under maintenance - coming soon)';\r\n                claudeOption.disabled = true; // Temporarily disable Claude\r\n                claudeOption.style.color = '#999'; // Grey out the option\r\n                providerSelect.appendChild(claudeOption);\r\n                // Don't set hasAvailableProvider = true for Claude temporarily\r\n\r\n                // Comment out Claude model population for now\r\n                /*\r\n                // Populate Claude models if element exists and models are available\r\n                if (claudeModelSelect && aiConfig.claude_models && Array.isArray(aiConfig.claude_models)) {\r\n                    aiConfig.claude_models.forEach(model => {\r\n                        const modelOption = document.createElement('option');\r\n                        modelOption.value = model.key;\r\n                        modelOption.textContent = model.name;\r\n                        claudeModelSelect.appendChild(modelOption);\r\n                    });\r\n\r\n                    // Set default Claude model\r\n                    if (aiConfig && aiConfig.default_claude_model) {\r\n                        claudeModelSelect.value = aiConfig.default_claude_model;\r\n                        selectedClaudeModel = aiConfig.default_claude_model;\r\n                    }\r\n                }\r\n                */\r\n            }\r\n\r\n            // If no providers are available, add disabled options\r\n            if (!hasAvailableProvider) {\r\n                if (!aiConfig || !aiConfig.fireworks_available) {\r\n                    const fireworksOption = document.createElement('option');\r\n                    fireworksOption.value = 'fireworks';\r\n                    fireworksOption.textContent = 'Fireworks.ai (Not configured)';\r\n                    fireworksOption.disabled = true;\r\n                    providerSelect.appendChild(fireworksOption);\r\n                }\r\n\r\n                if (!aiConfig || !aiConfig.claude_available) {\r\n                    const claudeOption = document.createElement('option');\r\n                    claudeOption.value = 'claude';\r\n                    claudeOption.textContent = 'Claude API (Not configured)';\r\n                    claudeOption.disabled = true;\r\n                    providerSelect.appendChild(claudeOption);\r\n                }\r\n                \r\n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\r\n                return;\r\n            }\r\n\r\n            // Restore saved selections\r\n            const savedProvider = localStorage.getItem('ai-chat-provider');\r\n            const savedClaudeModel = localStorage.getItem('ai-chat-claude-model');\r\n\r\n            if (savedProvider && document.querySelector(`option[value=\"${savedProvider}\"]`)) {\r\n                providerSelect.value = savedProvider;\r\n                currentProvider = savedProvider;\r\n            } else if (aiConfig && aiConfig.fireworks_available) {\r\n                currentProvider = 'fireworks';\r\n                providerSelect.value = 'fireworks';\r\n            } else if (aiConfig && aiConfig.claude_available) {\r\n                currentProvider = 'claude';\r\n                providerSelect.value = 'claude';\r\n            }\r\n\r\n            if (savedClaudeModel && claudeModelSelect && document.querySelector(`#claude-model-select option[value=\"${savedClaudeModel}\"]`)) {\r\n                claudeModelSelect.value = savedClaudeModel;\r\n                selectedClaudeModel = savedClaudeModel;\r\n            }\r\n\r\n            // Show/hide Claude model selection\r\n            updateClaudeModelVisibility();\r\n        }\r\n\r\n        /**\r\n         * Update Claude model selection visibility\r\n         */\r\n        function updateClaudeModelVisibility() {\r\n            if (claudeModelSelection && currentProvider === 'claude' && aiConfig?.claude_available) {\r\n                claudeModelSelection.style.display = 'flex';\r\n            } else if (claudeModelSelection) {\r\n                claudeModelSelection.style.display = 'none';\r\n            }\r\n        }\r\n\r\n        // Provider selection change handler\r\n        if (providerSelect) {\r\n            providerSelect.addEventListener('change', function() {\r\n                currentProvider = this.value;\r\n                localStorage.setItem('ai-chat-provider', currentProvider);\r\n                updateClaudeModelVisibility();\r\n                \r\n                // Clear chat messages when switching providers\r\n                messagesContainer.innerHTML = `\r\n                    <div class=\"ai-message\">\r\n                        <strong>AI Assistant:</strong> Hello! I'm now using ${currentProvider === 'claude' ? 'Claude API' : 'Fireworks.ai'}. How can I help you today?\r\n                    </div>\r\n                `;\r\n            });\r\n        }\r\n\r\n        // Claude model selection change handler\r\n        if (claudeModelSelect) {\r\n            claudeModelSelect.addEventListener('change', function() {\r\n                selectedClaudeModel = this.value;\r\n                localStorage.setItem('ai-chat-claude-model', selectedClaudeModel);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Send a message to the AI assistant\r\n         */\r\n        function sendMessage() {\r\n            const message = chatInput.value.trim();\r\n            if (!message) {\r\n                return;\r\n            }\r\n\r\n            // Check if we have a valid configuration\r\n            if (!aiConfig || (!aiConfig.fireworks_available && !aiConfig.claude_available)) {\r\n                showConfigurationError('No AI providers are configured. Please check plugin settings.');\r\n                return;\r\n            }\r\n\r\n            // Add user message\r\n            const userMessageDiv = document.createElement(\"div\");\r\n            userMessageDiv.className = \"user-message\";\r\n            userMessageDiv.innerHTML = \"<strong>You:</strong> \" + message;\r\n            messagesContainer.appendChild(userMessageDiv);\r\n\r\n            // Clear input\r\n            chatInput.value = \"\";\r\n\r\n            // Show loading state\r\n            const loadingDiv = document.createElement(\"div\");\r\n            loadingDiv.className = \"ai-message\";\r\n            loadingDiv.innerHTML = `<strong>AI Assistant:</strong> <em>Getting your credentials for ${currentProvider}...</em>`;\r\n            messagesContainer.appendChild(loadingDiv);\r\n\r\n            // Get user credentials via AJAX\r\n            Ajax.call([{\r\n                methodname: 'block_aiassistant_get_user_credentials',\r\n                args: { provider: currentProvider },\r\n                done: function(credentials) {\r\n                    // Remove loading message\r\n                    messagesContainer.removeChild(loadingDiv);\r\n\r\n                    if (credentials.success) {\r\n                        // Now make the actual chat request using those credentials\r\n                        if (currentProvider === 'claude') {\r\n                            sendClaudeChatMessage(message, credentials.api_key);\r\n                        } else {\r\n                            sendFireworksChatMessage(message, credentials.api_key);\r\n                        }\r\n                    } else {\r\n                        const errorDiv = document.createElement(\"div\");\r\n                        errorDiv.className = \"ai-message\";\r\n                        errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Error: \" + credentials.message + \"</em>\";\r\n                        messagesContainer.appendChild(errorDiv);\r\n                    }\r\n                },\r\n                fail: function(error) {\r\n                    // Remove loading message\r\n                    if (messagesContainer.contains(loadingDiv)) {\r\n                        messagesContainer.removeChild(loadingDiv);\r\n                    }\r\n\r\n                    const errorDiv = document.createElement(\"div\");\r\n                    errorDiv.className = \"ai-message\";\r\n                    errorDiv.innerHTML = \"<strong>AI Assistant:</strong> <em>Failed to get credentials: \" +\r\n                        (error.message || 'Unknown error') + \"</em>\";\r\n                    messagesContainer.appendChild(errorDiv);\r\n                }\r\n            }]);\r\n\r\n            // Scroll to bottom\r\n            messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n        }\r\n\r\n        /**\r\n         * *WIP/ Needs to send `apiKey` from the Moodle's server to the backend,\r\n         * not the other way around.*\r\n         * \r\n         * Send chat message to Fireworks API (Direct API approach)\r\n         * @param {string} message - The message to send\r\n         * @param {string} apiKey - The master API key for authentication\r\n         */\r\n        async function sendFireworksChatMessage(message, apiKey) {\r\n            console.log('DEBUG: sendFireworksChatMessage called with:', { message, apiKey });\r\n            console.log('DEBUG: About to call FastAPI at http://127.0.0.1:8000/api/chat');\r\n            setTimeout(async function() {\r\n                const aiMessageDiv = document.createElement(\"div\");\r\n                aiMessageDiv.className = \"ai-message\";\r\n                aiMessageDiv.innerHTML = \"<strong>AI Assistant (Fireworks):</strong> <span class='response-text'></span>\";\r\n                messagesContainer.appendChild(aiMessageDiv);\r\n                const responseSpan = aiMessageDiv.querySelector('.response-text');\r\n                \r\n                const url = 'http://127.0.0.1:8000/api/chat'; // Adjust\r\n                const options = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        \"message\": message,\r\n                        \"history\": [] // Empty for now, you can build conversation history later\r\n                    })\r\n                };\r\n                \r\n                try {\r\n                    const response = await fetch(url, options);\r\n                    \r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n                    }\r\n                    // Handle Server-Sent Events (SSE) response\r\n                    const reader = response.body.getReader();\r\n                    const decoder = new TextDecoder();\r\n                    responseSpan.textContent = '';\r\n                \r\n                    while (true) {\r\n                        const { done, value } = await reader.read();\r\n                        if (done) break;\r\n                        \r\n                        const lines = decoder.decode(value, { stream: true }).split('\\n');\r\n                        console.debug('Lines: ', lines);\r\n                        for (const line of lines) {\r\n                            if (!line.trim()) continue;\r\n                            \r\n                            try {\r\n                                const data = JSON.parse(line);\r\n                                console.debug('Data: ', data)\r\n                                if (data.content === '[DONE]') break;\r\n                                if (data.content) {\r\n                                    responseSpan.textContent += data.content;\r\n                                    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n                                }\r\n                                if (data.error) throw new Error(data.error);\r\n                            } catch (e) {\r\n                                console.error('Parse error:', e);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    // Convert final markdown to HTML if marked is available\r\n                    if (typeof marked !== 'undefined' && marked.parse) {\r\n                        const htmlContent = marked.parse(responseSpan.textContent);\r\n                        responseSpan.innerHTML = htmlContent;\r\n                    }\r\n                    \r\n                } catch (error) {\r\n                    console.error('FastAPI call failed:', error);\r\n                    responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\r\n                }\r\n\r\n                // Final scroll to bottom\r\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n            }, 1000);\r\n        }\r\n\r\n        // /**\r\n        //  * Send chat message to Claude API with streaming support\r\n        //  * @param {string} message - The message to send\r\n        //  * @param {string} apiKey - The API key for authentication\r\n        //  */\r\n        // async function sendClaudeChatMessage(message, apiKey) {\r\n        //     setTimeout(async function() {\r\n        //         const aiMessageDiv = document.createElement(\"div\");\r\n        //         aiMessageDiv.className = \"ai-message\";\r\n        //         aiMessageDiv.innerHTML = `<strong>AI Assistant (Claude):</strong> <span class='response-text'></span>`;\r\n        //         messagesContainer.appendChild(aiMessageDiv);\r\n        //         const responseSpan = aiMessageDiv.querySelector('.response-text');\r\n                \r\n        //         // Determine which model to use with safe fallback\r\n        //         let modelToUse = selectedClaudeModel;\r\n        //         if (!modelToUse && aiConfig && aiConfig.default_claude_model) {\r\n        //             modelToUse = aiConfig.default_claude_model;\r\n        //         }\r\n        //         if (!modelToUse) {\r\n        //             modelToUse = 'claude-sonnet-4-20250514'; // hardcoded fallback\r\n        //         }\r\n\r\n        //         const url = 'https://api.anthropic.com/v1/messages';\r\n        //         const options = {\r\n        //             method: 'POST',\r\n        //             headers: {\r\n        //                 'x-api-key': apiKey,\r\n        //                 'Content-Type': 'application/json',\r\n        //                 'anthropic-version': '2023-06-01'\r\n        //             },\r\n        //             body: JSON.stringify({\r\n        //                 model: modelToUse,\r\n        //                 max_tokens: 2000,\r\n        //                 messages: [\r\n        //                     {\r\n        //                         role: \"user\",\r\n        //                         content: message\r\n        //                     }\r\n        //                 ],\r\n        //                 stream: true\r\n        //             })\r\n        //         };\r\n                \r\n        //         try {\r\n        //             const response = await fetch(url, options);\r\n                    \r\n        //             if (!response.ok) {\r\n        //                 const errorData = await response.text();\r\n        //                 console.error('Claude API error response:', errorData);\r\n        //                 throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        //             }\r\n                    \r\n        //             const reader = response.body.getReader();\r\n        //             const decoder = new TextDecoder();\r\n        //             let responseContent = '';\r\n        //             let hasReceivedContent = false;\r\n                    \r\n        //             try {\r\n        //                 while (true) {\r\n        //                     const { done, value } = await reader.read();\r\n                            \r\n        //                     if (done) {\r\n        //                         break;\r\n        //                     }\r\n                            \r\n        //                     const chunk = decoder.decode(value);\r\n        //                     const lines = chunk.split('\\n');\r\n                            \r\n        //                     for (const line of lines) {\r\n        //                         if (line.startsWith('data: ')) {\r\n        //                             const data = line.slice(6);\r\n                                    \r\n        //                             if (data === '[DONE]') {\r\n        //                                 break;\r\n        //                             }\r\n                                    \r\n        //                             try {\r\n        //                                 const parsed = JSON.parse(data);\r\n                                        \r\n        //                                 if (parsed.type === 'error') {\r\n        //                                     console.error('Claude API error:', parsed.error);\r\n        //                                     throw new Error(parsed.error.message || 'Claude API error');\r\n        //                                 }\r\n                                        \r\n        //                                 if (parsed.type === 'content_block_delta' && parsed.delta && parsed.delta.text) {\r\n        //                                     const content = parsed.delta.text;\r\n        //                                     responseContent += content;\r\n        //                                     hasReceivedContent = true;\r\n                                            \r\n        //                                     // Convert markdown to HTML if marked is available\r\n        //                                     if (typeof marked !== 'undefined' && marked.parse) {\r\n        //                                         const htmlContent = marked.parse(responseContent);\r\n        //                                         responseSpan.innerHTML = htmlContent;\r\n        //                                     } else {\r\n        //                                         responseSpan.textContent = responseContent;\r\n        //                                     }\r\n                                            \r\n        //                                     // Scroll to bottom\r\n        //                                     messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n        //                                 }\r\n        //                             } catch (parseError) {\r\n        //                                 console.log('Non-JSON data chunk:', data);\r\n        //                             }\r\n        //                         }\r\n        //                     }\r\n        //                 }\r\n        //             } finally {\r\n        //                 reader.releaseLock();\r\n        //             }\r\n                    \r\n        //             // Check if we received any content\r\n        //             if (!hasReceivedContent) {\r\n        //                 responseSpan.textContent = 'No response received from Claude API.';\r\n        //             }\r\n                    \r\n        //         } catch (error) {\r\n        //             console.error('Claude API call failed:', error);\r\n        //             responseSpan.textContent = 'Sorry, there was an error processing your request: ' + error.message;\r\n        //         }\r\n\r\n        //         // Final scroll to bottom\r\n        //         messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n        //     }, 1000);\r\n        // }\r\n\r\n        sendButton.addEventListener(\"click\", sendMessage);\r\n        chatInput.addEventListener(\"keypress\", function(e) {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n                e.preventDefault();\r\n                sendMessage();\r\n            }\r\n        });\r\n    };\r\n\r\n    // Try to initialize immediately if DOM is ready, otherwise wait for DOMContentLoaded\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', initializeChat);\r\n    } else {\r\n        // DOM is already loaded, initialize immediately\r\n        initializeChat();\r\n    }\r\n};"],"mappings":"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","ignoreList":[]}